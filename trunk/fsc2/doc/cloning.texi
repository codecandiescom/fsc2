@c $Id$
@c
@c Copyright (C) 2001 Jens Thoms Toerring
@c
@c This file is part of fsc2.
@c
@c Fsc2 is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2, or (at your option)
@c any later version.
@c
@c Fsc2 is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with fsc2; see the file COPYING.  If not, write to
@c the Free Software Foundation, 59 Temple Place - Suite 330,
@c Boston, MA 02111-1307, USA.


@node Cloning Devices, Modules, Command Line Options, Top
@chapter Cloning Devices
@cindex cloning devices


Unfortunately, all devices listed in the @code{DEVICES} section must be
different. This is due to limitations of to the way shared libraries are
handled and, as far as devices are concerned that are controlled via the
GPIB bus, to certain ideosyncrasies of the GPIB libraries . Thus, if two
or more exactly identical devices are to be used simultaneously extra
shared libraries for these devices have to be created.

Fortunately, this is such a simple process that it can be done via a
script. There are basically three or four steps:
@enumerate
@item @code{cd} into the @file{utils} subdirectory of @acronym{fsc2}s main
directory
@item run the script @file{clone_device}
@item remake fsc2 and reinstall
@item update the GPIB configuration file if necessary
@end enumerate

The script @file{clone_device} is a Perl script (thus you need Perl
installed to be able to run it). The script resides in the @code{utils}
subdirectory of @acronym{fsc2}s main directory and can only be run from
within this directory. It asks for the name of the device to be cloned
(i.e.@: the name of the device of which two or more are to be used
simultaneously), a new name for the device and finally for another name
that is going to be used in warnings, error mesaages, and, if
applicable, in the GPIB configuration file.

Lets assume you have use two lock-in amplifiers of type @code{sr510} and
need a second device module that will be invoked by the name
@code{sr510_b}. Here is a complete example of what one will see when
running the script (together with the answers):
@example
jens@@crowley:~/fsc2/utils > clone_device 

This program allows you to automatically create a new device
module from an already existing module. This is necessary only
in cases where two identical devices must be used simultaneously.

You will have to enter the name of the device you want to clone
in exactly the same way as it would appear in the DEVICES section
of an EDL program.

Do you want to continue [y/n]? y

Name of the device module you want to clone :  sr510

Please enter the name for the new module    :  sr510_b

Also a device name (to be used in error messages and
possibly in the GPIB configuration file) is needed.

Please enter a new device name (the old name is SR510) :  SR510_B

Thanks, that's all the information needed...

Everything worked out well. Now you simply have to re-make fsc2
(just cd to the main directory and type 'make' and, when this
succeeds, become root and type 'make install').

If the device is controlled via the GPIB bus you still have to
update the GPIB configuration file manually (usually, it's
/etc/gpib.conf). Just copy the section for the old device,
replace the device name by `SR510_B' and change the GPIB
address to the one of the new device.
@end example

When you have run the script you will have to @code{cd} back to
@acronym{fsc2}s main directory and recompile by typing @code{make}.
After a successful run of make to compile the new device module you
will have to install it. To do so you must become @code{root} and,
from @acronym{fsc2}s main directory, run @w{@code{make install}}.

If the device isn't controlled via the GPIB bus everything is already
done. Otherwise you will have also to edit (still as @code{root} the
GPIB configuration file (which usually is @file{/etc/gpib.conf}) and
first copy the entry of the cloned device. Then you only have to
change the name of the device given there (i.e.@: in or example
@code{SR510}) to the new device name (@code{SR510_B} in the example) and
finally change the entry for the new devices GPIB address.
