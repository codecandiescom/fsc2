@c $Id$
@c
@c Copyright (C) 1999-2003 Jens Thoms Toerring
@c
@c This file is part of fsc2.
@c
@c Fsc2 is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2, or (at your option)
@c any later version.
@c
@c Fsc2 is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with fsc2; see the file COPYING.  If not, write to
@c the Free Software Foundation, 59 Temple Place - Suite 330,
@c Boston, MA 02111-1307, USA.


@node Device Reference, Reserved Words, Modules, Top
@appendix Device Reference

@ifinfo
@menu
* aeg_s_band::    S-band AEG Magnet Power Supply
* aeg_x_band::    X-band AEG Magnet Power Supply
* bh15::          Bruker Hall Effect Field Controller BH 15
* dg2020_b::      Sony/Tektronix Data Generator DG2020 (Berlin Version)
* dg2020_f::      Sony/Tektronix Data Generator DG2020 (Frankfurt Version)
* egg4402::       EG&G PARC Box-Car Integrator 4402
* ep385::         Bruker Pulse Programmer EP385
* er023m::        Bruker Signal Channel ER 023 M
* er032m::        Bruker Field controller ER 032 M 
* er035m::        Bruker NMR Gaussmeter ER 035 M (GPIB)
* er035m_s::      Bruker NMR Gaussmeter ER 035 M (Serial)
* er035m_sa::     Bruker NMR Gaussmeter ER 035 M (GPIB, Stand-Alone)
* er035m_sas::    Bruker NMR Gaussmeter ER 035 M (Serial, Stand-Alone)
* hfs9000::       Tektronix Stimulus System HFS9000 (Berlin W-Band)
* hp5340a::       HP Frequency Counter HP5340A
* hp8647a::       HP RF Synthesizer HP8647A
* hp8648b::       HP RF Synthesizer HP8648B
* hp8672a::       HP RF Synthesizer HP8672A
* ips20_4::       Oxford Magnet Sweep Power Supply IPS20-4
* keithley228a::  Magnet Power Supply Keithley 228A (Berlin W-Band)
* kontron4060::   Kontron 4060 Voltmeter
* lakeshore330::  Lake Shore 330 Temperature Controller
* lecroy9400::    LeCroy Digitizing Oscilloscope 9400
* me6000::        Meilhaus Electronic GmbH ME-6000 and ME-6100 DAC card
* ni6601::        National Instruments 6601 GPCT card
* pt2025::        Metrolab NMR Teslameter PT2025
* rs_spec10::     Roper Scientific Spec-10 CCD Camera
* rs690::         Interface Technology RS690 Word Generator (Berlin 360 GHz)
* s_band_magnet_broad::   S-band Magnet Power Supply (broad range)
* s_band_magnet_narrow::  S-band Magnet Power Supply (narrow range)
* spectrapro_300i::  Acton Research SpectraPro-300i Monochromator
* sr510::         Stanford Research Lock-In Amplifier SR510
* sr530::         Stanford Research Lock-In Amplifier SR530
* sr810::         Stanford Research Lock-In Amplifier SR810
* sr830::         Stanford Research Lock-In Amplifier SR830
* tds520::        Tektronix Digitizing Oscilloscope TDS520
* tds520a::       Tektronix Digitizing Oscilloscope TDS520A
* tds520c::       Tektronix Digitizing Oscilloscope TDS520C
* tds540::        Tektronix Digitizing Oscilloscope TDS540
* tds744a::       Tektronix Digitizing Oscilloscope TDS744A
* tds754a::       Tektronix Digitizing Oscilloscope TDS754A
* thurlby330::    Thurlby & Thandar Power Supply PL330DP
* witio_48::      Wasco WITIO-48 DIO card
@end menu
@end ifinfo



@node aeg_s_band, aeg_x_band, Device Reference, Device Reference
@iftex
@subheading S-band AEG Magnet Power Supply
@end iftex
@ifnottex
@section S-band AEG Magnet Power Supply
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{aeg_s_band}

@paragraphindent 0
@strong{Description}: Power supply for AEG magnet with home-built
computer control to be used with an S-band spectrometer. Requires either
the @code{er035m} or @code{er035_s} NMR gaussmeter (with @code{F0}
probe) or the @code{bh15} Hall effect field controller, which must be
listed before the magnet power supply module. Field range depends on the
gaussmeter used, with @code{er035m} range is @w{460 G} to @w{2390 G},
with @code{bh15} range is @w{-50 G} to @w{23000 G}.

@paragraphindent 0
@strong{Controlled via}: Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}            @tab @ref{magnet_name}
@item @code{magnet_setup()}           @tab @ref{magnet_setup}
@item @code{magnet_fast_init()}       @tab @ref{magnet_fast_init}
@item @code{set_field()}              @tab @ref{set_field}
@item @code{get_field()}              @tab @ref{get_field}
@item @code{sweep_up()}               @tab @ref{sweep_up}
@item @code{sweep_down()}             @tab @ref{sweep_down}
@item @code{reset_field()}            @tab @ref{reset_field}
@end multitable

@node aeg_x_band, bh15, aeg_s_band, Device Reference
@iftex
@subheading X-band AEG Magnet Power Supply
@end iftex
@ifnottex
@section X-band AEG Magnet Power Supply
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{aeg_x_band}

@paragraphindent 0
@strong{Description}: Power supply for AEG magnet with home-built
computer control to be used with an X-band spectrometer. Requires either
the @code{er035m} or @code{er035_s} NMR gaussmeter (with @code{F1}
probe) or the @code{bh15} Hall effect field controller to work, which
must be listed before the magnet power supply module. Field range
depends on the gaussmeter used, with @code{er035m} range is @w{1460 G}
to @w{19900 G}, with @code{bh15} range is @w{-50 G} to @w{23000 G}.

@paragraphindent 0
@strong{Controlled via}: Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}            @tab @ref{magnet_name}
@item @code{magnet_setup()}           @tab @ref{magnet_setup}
@item @code{magnet_fast_init()}       @tab @ref{magnet_fast_init}
@item @code{set_field()}              @tab @ref{set_field}
@item @code{get_field()}              @tab @ref{get_field}
@item @code{sweep_up()}               @tab @ref{sweep_up}
@item @code{sweep_down()}             @tab @ref{sweep_down}
@item @code{reset_field()}            @tab @ref{reset_field}
@end multitable


@node bh15, dg2020_b, aeg_x_band, Device Reference
@iftex
@subheading Bruker Hall Effect Field Controller BH 15
@end iftex
@ifnottex
@section Bruker Hall Effect Field Controller BH 15
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{bh15}

@paragraphindent 0
@strong{Description}: Bruker BH15 Hall effect controller for measuring
magnetic fields in combination with power supply controllers
@code{aeg_s_band} and @code{aeg_x_band}. Field range that can be
measured is from @w{-50 G} to @w{23000 G}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}        @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}       @tab @ref{gaussmeter_field}
@item @code{find_field()}             @tab @ref{find_field}
@item @code{gaussmeter_resolution()}  @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_wait()}
@end multitable

@node dg2020_b, dg2020_f, bh15, Device Reference
@iftex
@subheading Sony/Tektronix Data Generator DG2020 (Berlin Version)
@end iftex
@ifnottex
@section Sony/Tektronix Data Generator DG2020 (Berlin Version)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{dg2020_b}

@paragraphindent 0
@strong{Description}: Sony/Tektronix Data generator DG2020, used as
pulser for the Berlin X-band spectrometer.

@paragraphindent 0
Time base: between @w{5 ns} and @w{100 ms}@*
Maximum pulse voltage: between @w{-2 V} and @w{7 V}@*
Minimum pulse voltage: between @w{-3 V} and @w{6 V}@*
Difference between minimum and maximum pulse voltage must be not more
than @w{9 V} and at least @w{0.5 V}.@*
Pulse voltage resolution: @w{0.1 V}@*
Trigger-in level: Between @w{-5 V} to @w{5 V}@*
Trigger-in voltage resolution: @w{0.1 V}@*
Trigger-in impedance: 50 Ohm (@code{LOW}) or 1 kOhm (@code{HIGH})@*
Number of output connectors (POD): 12@*
Number of internal channels: 36

@paragraphindent 0
Due to some problems with the firmware of the device pulse sequences
always start with a state where the output of all connectors is the
minimum pulse voltage for the duration of the time base (this also holds
for function/output channels declared as @code{INVERTED}).

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{pulser_name()}           @tab @ref{pulser_name}
@item @code{pulser_state()}          @tab @ref{pulser_state}
@item @code{pulser_update()}         @tab @ref{pulser_update}
@item @code{pulser_shift()}          @tab @ref{pulser_shift}
@item @code{pulser_increment()}      @tab @ref{pulser_increment}
@item @code{pulser_reset()}          @tab @ref{pulser_reset}
@item @code{pulser_next_phase()}     @tab @ref{pulser_next_phase}
@item @code{pulser_phase_reset()}    @tab @ref{pulser_phase_reset}
@item @code{pulser_pulse_reset()}    @tab @ref{pulser_pulse_reset}
@item @code{pulser_lock_keyboard()}  @tab @ref{pulser_lock_keyboard}
@item @code{pulser_shape_to_defense_minimum_distance()} @tab @ref{pulser_shape_to_defense_minimum_distance}
@item @code{pulser_defense_to_shape_minimum_distance()} @tab @ref{pulser_defense_to_shape_minimum_distance}
@item @code{pulser_automatic_shape_pulses()} @tab @ref{pulser_automatic_shape_pulses}
@item @code{pulser_automatic_twt_pulses()} @tab @ref{pulser_automatic_twt_pulses}
@item @code{pulser_minimum_twt_pulse_distance()} @tab @ref{pulser_minimum_twt_pulse_distance}
@item @code{pulser_keep_all_pulses()} @tab @ref{pulser_keep_all_pulses}
@item @code{pulser_maximum_pattern_length()} @tab @ref{pulser_maximum_pattern_length}
@item @code{pulser_show_pulses()}    @tab @ref{pulser_show_pulses}
@item @code{pulser_dump_pulses()}    @tab @ref{pulser_dump_pulses}
@end multitable


@node dg2020_f, egg4402, dg2020_b, Device Reference
@iftex
@subheading Sony/Tektronix Data Generator DG2020 (Frankfurt Version)
@end iftex
@ifnottex
@section Sony/Tektronix Data Generator DG2020 (Frankfurt Version)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{dg2020_f}

@paragraphindent 0
@strong{Description}: Sony/Tektronix Data generator DG2020, used as
pulser for the Frankfurt S-band spectrometer.

@paragraphindent 0
Time base: between @w{5 ns} and @w{100 ms}@*
Maximum pulse voltage: between @w{-2 V} and @w{7 V}@*
Minimum pulse voltage: between @w{-3 V} and @w{6 V}@*
Difference between minimum and maximum pulse voltage must be not more
than @w{9 V} and at least @w{0.5 V}.@*
Pulse voltage resolution: @w{0.1 V}@*
Trigger-in level: Between @w{-5 V} to @w{5 V}@*
Trigger-in voltage resolution: @w{0.1 V}@*
Trigger-in impedance: 50 Ohm (@code{LOW}) or 1 kOhm (@code{HIGH})@*
Number of output connectors (POD): 12@*
Number of internal channels: 36

@paragraphindent 0
Due to some problems with the firmware of the device pulse sequences
always start with a state where the output of all connectors is the
minimum pulse voltage for the duration of the time base (this also holds
for function/output channels declared as @code{INVERTED}).

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{pulser_name()}           @tab @ref{pulser_name}
@item @code{pulser_state()}          @tab @ref{pulser_state}
@item @code{pulser_update()}         @tab @ref{pulser_update}
@item @code{pulser_shift()}          @tab @ref{pulser_shift}
@item @code{pulser_increment()}      @tab @ref{pulser_increment}
@item @code{pulser_reset()}          @tab @ref{pulser_reset}
@item @code{pulser_next_phase()}     @tab @ref{pulser_next_phase}
@item @code{pulser_phase_reset()}    @tab @ref{pulser_phase_reset}
@item @code{pulser_pulse_reset()}    @tab @ref{pulser_pulse_reset}
@item @code{pulser_lock_keyboard()}  @tab @ref{pulser_lock_keyboard}
@item @code{pulser_phase_switch_delay()} @tab @ref{pulser_phase_switch_delay}
@item @code{pulser_grace_period()} @tab @ref{pulser_grace_period}
@item @code{pulser_keep_all_pulses()} @tab @ref{pulser_keep_all_pulses}
@item @code{pulser_maximum_pattern_length()} @tab @ref{pulser_maximum_pattern_length}
@item @code{pulser_show_pulses()}    @tab @ref{pulser_show_pulses}
@item @code{pulser_dump_pulses()}    @tab @ref{pulser_dump_pulses}
@end multitable


@node egg4402, ep385, dg2020_f, Device Reference
@iftex
@subheading EG&G PARC Box-Car Integrator 4402
@end iftex
@ifnottex
@section EG&G PARC Box-Car Integrator 4402
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{egg4402}

@paragraphindent 0
@strong{Description}: EG&G PARC box-car integrator - only download of
already measured curves and starting and stopping of acquisitions are
currently supported.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{boxcar_name()}               @tab @ref{boxcar_name}
@item @code{boxcar_curve_length()}       @tab @ref{boxcar_curve_length}
@item @code{boxcar_get_curve()}          @tab @ref{boxcar_get_curve}
@item @code{boxcar_start_acquisition()}  @tab @ref{boxcar_start_acquisition}
@item @code{boxcar_stop_acquisition()}   @tab @ref{boxcar_stop_acquisition}
@item @code{boxcar_single_shot()}        @tab @ref{boxcar_single_shot}
@end multitable


@node ep385, er023m, egg4402, Device Reference
@iftex
@subheading Bruker Pulse Programmer EP385
@end iftex
@ifnottex
@section Bruker Pulse Programmer EP385
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{ep385}

@paragraphindent 0
@strong{Description}: Bruker Pulse Programmer EP385, used as
pulser for the Berlin X-band spectrometer.

@paragraphindent 0
Time base: internal clock @w{8 ns}, external clock @w{8 ns} and slower@*
Minimum repetition time: internal clock @w{1.286 ms}, external clock
160768 times time base@*
Repetition time increments: internal clock @w{102.4 us}, external clock
12800 times time base@*
Maximum number of pulses per channel: 59@*
Output channels: 8

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{pulser_name()}           @tab @ref{pulser_name}
@item @code{pulser_state()}          @tab @ref{pulser_state}
@item @code{pulser_update()}         @tab @ref{pulser_update}
@item @code{pulser_shift()}          @tab @ref{pulser_shift}
@item @code{pulser_increment()}      @tab @ref{pulser_increment}
@item @code{pulser_reset()}          @tab @ref{pulser_reset}
@item @code{pulser_next_phase()}     @tab @ref{pulser_next_phase}
@item @code{pulser_phase_reset()}    @tab @ref{pulser_phase_reset}
@item @code{pulser_pulse_reset()}    @tab @ref{pulser_pulse_reset}
@item @code{pulser_shape_to_defense_minimum_distance()} @tab @ref{pulser_shape_to_defense_minimum_distance}
@item @code{pulser_defense_to_shape_minimum_distance()} @tab @ref{pulser_defense_to_shape_minimum_distance}
@item @code{pulser_automatic_shape_pulses()} @tab @ref{pulser_automatic_shape_pulses}
@item @code{pulser_automatic_twt_pulses()} @tab @ref{pulser_automatic_twt_pulses}
@item @code{pulser_minimum_twt_pulse_distance()} @tab @ref{pulser_minimum_twt_pulse_distance}
@item @code{pulser_show_pulses()}    @tab @ref{pulser_show_pulses}
@item @code{pulser_dump_pulses()}    @tab @ref{pulser_dump_pulses}
@end multitable



@node er023m, er032m, ep385, Device Reference
@iftex
@subheading Bruker Signal Channel ER 023 M
@end iftex
@ifnottex
@section Bruker Signal Channel ER 023 M
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{er023m}

@paragraphindent 0
@strong{Description}: Bruker Signal Channel ER 023 M used in older
Bruker EPR spectrometers -- lock-in amplifier with built-in
analog-to-digital converter.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{lockin_name()}             @tab @ref{lockin_name}
@item @code{lockin_get_data()}         @tab @ref{lockin_get_data}
@item @code{lockin_sensitivity()}      @tab @ref{lockin_sensitivity}
@item @code{lockin_time_constant()}    @tab @ref{lockin_time_constant}
@item @code{lockin_phase()}            @tab @ref{lockin_phase}
@item @code{lockin_offset()}           @tab @c{@ref{lockin_offset}}
@item @code{lockin_conversion_time()}  @tab @ref{lockin_conversion_time}
@item @code{lockin_ref_freq()}         @tab @ref{lockin_ref_freq}
@item @code{lockin_ref_level()}        @tab @ref{lockin_ref_level}
@item @code{lockin_harmonic()}         @tab @ref{lockin_harmonic}
@item @code{lockin_resonator()}        @tab @c{@ref{lockin_resonator}}
@item @code{lockin_is_overload()}      @tab @c{@ref{lockin_is_overload}}
@item @code{lockin_rg()}               @tab @c{@ref{lockin_rg}}
@item @code{lockin_tc()}               @tab @c{@ref{lockin_tc}}
@item @code{lockin_ma()}               @tab @c{@ref{lockin_ma}}
@item @code{lockin_ct()}               @tab @c{@ref{lockin_ct}}
@item @code{lockin_mf()}               @tab @c{@ref{lockin_mf}}
@end multitable


@node er032m, er035m, er023m, Device Reference
@iftex
@subheading Bruker Field controller ER 032 M
@end iftex
@ifnottex
@section Bruker Field controller ER 032 M
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{er032m}

@paragraphindent 0
@strong{Description}: Bruker ER 032 M field controller, used to control
the field in older Bruker EPR spectrometers. Maximum field range is from
@w{-50 G} to @w{23000 G}, minimum field step width is @w{1 mG}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}   @tab @ref{magnet_name}
@item @code{magnet_setup()}  @tab @ref{magnet_setup}
@item @code{set_field()}     @tab @ref{set_field}
@item @code{get_field()}     @tab @ref{get_field}
@item @code{sweep_up()}      @tab @ref{sweep_up}
@item @code{sweep_down()}    @tab @ref{sweep_down}
@item @code{reset_field()}   @tab @ref{reset_field}
@end multitable


@node er035m, er035m_s, er032m, Device Reference
@iftex
@subheading Bruker NMR Gaussmeter ER 035 M (GPIB)
@end iftex
@ifnottex
@section Bruker NMR Gaussmeter ER 035 M (GPIB)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{er035m}

@paragraphindent 0
@strong{Description}: Bruker NMR gaussmeter ER 035 M used in conjunction
with the magnet power supply controllers @code{aeg_s_band} and
@code{aeg_x_band}. Measuarable field range depends on probe used, with
@code{F0} probe it is @w{460 G} to @w{2390 G}, with @code{F1} probe the
range is @w{1460 G} to @w{19900 G}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}               @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}              @tab @ref{gaussmeter_field}
@item @code{find_field()}                    @tab @ref{find_field}
@item @code{gaussmeter_resolution()}         @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_probe_orientation()}  @tab @ref{gaussmeter_probe_orientation}
@item @code{gaussmeter_wait()}
@item @code{gaussmeter_upper_search_limit()} @tab @ref{gaussmeter_upper_search_limit}
@item @code{gaussmeter_lower_search_limit()} @tab @ref{gaussmeter_lower_search_limit}
@end multitable


@node er035m_s, er035m_sa, er035m, Device Reference
@iftex
@subheading Bruker NMR Gaussmeter ER 035 M (Serial)
@end iftex
@ifnottex
@section Bruker NMR Gaussmeter ER 035 M (Serial)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{er035m_s}

@paragraphindent 0
@strong{Description}: Bruker NMR gaussmeter ER 035 M used in conjunction
with the magnet power supply controllers @code{aeg_x_band} and
@code{aeg_x_band}. Measuarable field range depends on probe used, with
@code{F0} probe it is @w{460 G} to @w{2390 G}, with @code{F1} probe the
range is @w{1460 G} to @w{19900 G}.

@paragraphindent 0
@strong{Controlled via}: Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}               @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}              @tab @ref{gaussmeter_field}
@item @code{find_field()}                    @tab @ref{find_field}
@item @code{gaussmeter_resolution()}         @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_probe_orientation()}  @tab @ref{gaussmeter_probe_orientation}
@item @code{gaussmeter_wait()}
@item @code{gaussmeter_upper_search_limit()} @tab @ref{gaussmeter_upper_search_limit}
@item @code{gaussmeter_lower_search_limit()} @tab @ref{gaussmeter_lower_search_limit}
@end multitable


@node er035m_sa, er035m_sas, er035m_s, Device Reference
@iftex
@subheading Bruker NMR Gaussmeter ER 035 M (GPIB, Stand-Alone)
@end iftex
@ifnottex
@section Bruker NMR Gaussmeter ER 035 M (GPIB, Stand-Alone)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{er035m_sa}

@paragraphindent 0
@strong{Description}: Bruker NMR gaussmeter ER 035 M used as simple,
stand-alone gaussmeter. Measuarable field range depends on probe used,
with @code{F0} probe it is @w{460 G} to @w{2390 G}, with @code{F1} probe
the range is @w{1460 G} to @w{19900 G}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}               @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}              @tab @ref{gaussmeter_field}
@item @code{measure_field()}                 @tab @ref{measure_field}
@item @code{gaussmeter_resolution()}         @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_probe_orientation()}  @tab @ref{gaussmeter_probe_orientation}
@item @code{gaussmeter_upper_search_limit()} @tab @ref{gaussmeter_upper_search_limit}
@item @code{gaussmeter_lower_search_limit()} @tab @ref{gaussmeter_lower_search_limit}
@end multitable


@node er035m_sas, hfs9000, er035m_sa, Device Reference
@iftex
@subheading Bruker NMR Gaussmeter ER 035 M (Serial, Stand-Alone)
@end iftex
@ifnottex
@section Bruker NMR Gaussmeter ER 035 M (Serial, Stand-Alone)
@end ifnottex

@paragraphindent 0
@strong{Description}: Bruker NMR gaussmeter ER 035 M used as simple,
stand-alone gaussmeter. Measuarable field range depends on probe used,
with @code{F0} probe it is @w{460 G} to @w{2390 G}, with @code{F1} probe
the range is @w{1460 G} to @w{19900 G}.

@paragraphindent 0
@strong{Controlled via}: Serial port


@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}               @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}              @tab @ref{gaussmeter_field}
@item @code{measure_field()}                 @tab @ref{measure_field}
@item @code{gaussmeter_resolution()}         @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_probe_orientation()}  @tab @ref{gaussmeter_probe_orientation}
@item @code{gaussmeter_upper_search_limit()} @tab @ref{gaussmeter_upper_search_limit}
@item @code{gaussmeter_lower_search_limit()} @tab @ref{gaussmeter_lower_search_limit}
@end multitable


@node hfs9000, hp5340a, er035m_sas, Device Reference
@iftex
@subheading Tektronix Stimulus System HFS9000 (Berlin W-Band)
@end iftex
@ifnottex
@section Tektronix Stimulus System HFS9000 (Berlin W-Band)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{hfs9000}

@paragraphindent 0
@strong{Description}: Tektronix Stimulus System HFS9000, used as pulser
in the Berlin W-band spectrometer. No support for phase cycled experiments.

@paragraphindent 0
Time base: between @w{1.6 ns} and @w{20 us}@*
Maximum pulse voltage: between @w{-1.5 V} and @w{5.5 V}@*
Minimum pulse voltage: between @w{-2 V} and @w{5 V}@*
Difference must be not more than @w{5.5 V} and at least @w{0.5 V}@*
Resolution of pulse voltages: @w{10 mV}@*
Trigger-in levels: between @w{-4.7 V} to @w{4.7 V}@*
Resolution of trigger-in voltages: @w{10 mV}@*
Number of channels: 4 plus a TRIGGER_OUT channel@*
Fixed length of TRIGGER_OUT pulse: @w{20 ns}

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{pulser_name()}            @tab @ref{pulser_name}
@item @code{pulser_state()}           @tab @ref{pulser_state}
@item @code{pulser_channel_state()}   @tab @ref{pulser_channel_state}
@item @code{pulser_update()}          @tab @ref{pulser_update}
@item @code{pulser_shift()}           @tab @ref{pulser_shift}
@item @code{pulser_increment()}       @tab @ref{pulser_increment}
@item @code{pulser_reset()}           @tab @ref{pulser_reset}
@item @code{pulser_pulse_reset()}     @tab @ref{pulser_pulse_reset}
@item @code{pulser_lock_keyboard()}   @tab @ref{pulser_lock_keyboard}
@item @code{pulser_stop_on_update()}  @tab @ref{pulser_stop_on_update}
@item @code{pulser_keep_all_pulses()} @tab @ref{pulser_keep_all_pulses}
@item @code{pulser_maximum_pattern_length()} @tab @ref{pulser_maximum_pattern_length}
@item @code{pulser_show_pulses()}     @tab @ref{pulser_show_pulses}
@item @code{pulser_dump_pulses()}     @tab @ref{pulser_dump_pulses}
@end multitable


@node hp5340a, hp8647a, hfs9000, Device Reference
@iftex
@subheading HP Frequency Counter HP5340A
@end iftex
@ifnottex
@section HP Frequency Counter HP5340A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{hp5340a}

@paragraphindent 0
@strong{Description}: Hewlett-Packard HP frequency counterHP5340A. This is
a very old device even pre-dating the GPIB-standard. Only its capability
to return the measured frequency can be used.


@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{freq_counter_name_name()}           @tab @ref{freq_counter_name}
@item @code{freq_counter_measure()}             @tab @ref{freq_counter_measure}
@end multitable


@node hp8647a, hp8648b, hp5340a, Device Reference
@iftex
@subheading HP RF Synthesizer HP8647A
@end iftex
@ifnottex
@section HP RF Synthesizer HP8647A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{hp8647a}

@paragraphindent 0
@strong{Description}: Hewlett-Packard RF synthesizer HP8647A (but also
works with HP8648B) with support for output level normalization via
frequency/amplitude table files. For safety reasons only output
attenuations below @w{-5 db} are allowed -- change the configuration
file to allow higher output levels.

Frequency range is @w{250 kHz} to @w{1 GHz}, attenuation range @w{-136 db}
to @w{3 db}

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{synthesizer_name()}                 @tab @ref{synthesizer_name}
@item @code{synthesizer_state()}                @tab @ref{synthesizer_state}
@item @code{synthesizer_frequency()}            @tab @ref{synthesizer_frequency}
@item @code{synthesizer_step_frequency()}       @tab @ref{synthesizer_step_frequency}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_minimum_attenuation()}  @tab @ref{synthesizer_minimum_attenuation}
@item @code{synthesizer_sweep_up()}             @tab @ref{synthesizer_sweep_up}
@item @code{synthesizer_sweep_down()}           @tab @ref{synthesizer_sweep_down}
@item @code{synthesizer_reset_frequency()}      @tab @ref{synthesizer_reset_frequency}
@item @code{synthesizer_use_table()}            @tab @ref{synthesizer_use_table}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_att_ref_freq()}         @tab @ref{synthesizer_att_ref_freq}
@item @code{synthesizer_modulation()}           @tab @ref{synthesizer_modulation}
@item @code{synthesizer_mod_ampl()}             @tab @ref{synthesizer_mod_ampl}
@item @code{synthesizer_mod_type()}             @tab @ref{synthesizer_mod_type}
@item @code{synthesizer_mod_source()}           @tab @ref{synthesizer_mod_source}
@end multitable


@node hp8648b, hp8672a, hp8647a, Device Reference
@iftex
@subheading HP RF Synthesizer HP8648B
@end iftex
@ifnottex
@section HP RF Synthesizer HP8648B
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{hp8648b}

@paragraphindent 0
@strong{Description}: Hewlett-Packard RF synthesizer HP8648B with
support for output level normalization via frequency/amplitude table
files.

Frequency range is @w{10 kHz} to @w{2 GHz}, attenuation range @w{-136 db}
to @w{14.5 db}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{synthesizer_name()}                 @tab @ref{synthesizer_name}
@item @code{synthesizer_state()}                @tab @ref{synthesizer_state}
@item @code{synthesizer_frequency()}            @tab @ref{synthesizer_frequency}
@item @code{synthesizer_step_frequency()}       @tab @ref{synthesizer_step_frequency}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_minimum_attenuation()}  @tab @ref{synthesizer_minimum_attenuation}
@item @code{synthesizer_sweep_up()}             @tab @ref{synthesizer_sweep_up}
@item @code{synthesizer_sweep_down()}           @tab @ref{synthesizer_sweep_down}
@item @code{synthesizer_reset_frequency()}      @tab @ref{synthesizer_reset_frequency}
@item @code{synthesizer_use_table()}            @tab @ref{synthesizer_use_table}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_att_ref_freq()}         @tab @ref{synthesizer_att_ref_freq}
@item @code{synthesizer_modulation()}           @tab @ref{synthesizer_modulation}
@item @code{synthesizer_mod_ampl()}             @tab @ref{synthesizer_mod_ampl}
@item @code{synthesizer_mod_type()}             @tab @ref{synthesizer_mod_type}
@item @code{synthesizer_mod_source()}           @tab @ref{synthesizer_mod_source}
@end multitable


@node hp8672a, ips20_4, hp8648b, Device Reference
@iftex
@subheading HP RF Synthesizer HP8672A
@end iftex
@ifnottex
@section HP RF Synthesizer HP8672A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{hp8672a}

@paragraphindent 0
@strong{Description}: Hewlett-Packard RF synthesizer HP8672A with
support for output level normalization via frequency/amplitude table
files. For safety reasons only output attenuations below @w{-5 db} are
allowed -- change the configuration file to allow higher output levels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{synthesizer_name()}                 @tab @ref{synthesizer_name}
@item @code{synthesizer_state()}                @tab @ref{synthesizer_state}
@item @code{synthesizer_frequency()}            @tab @ref{synthesizer_frequency}
@item @code{synthesizer_step_frequency()}       @tab @ref{synthesizer_step_frequency}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_minimum_attenuation()}  @tab @ref{synthesizer_minimum_attenuation}
@item @code{synthesizer_sweep_up()}             @tab @ref{synthesizer_sweep_up}
@item @code{synthesizer_sweep_down()}           @tab @ref{synthesizer_sweep_down}
@item @code{synthesizer_reset_frequency()}      @tab @ref{synthesizer_reset_frequency}
@item @code{synthesizer_use_table()}            @tab @ref{synthesizer_use_table}
@item @code{synthesizer_attenuation()}          @tab @ref{synthesizer_attenuation}
@item @code{synthesizer_att_ref_freq()}         @tab @ref{synthesizer_att_ref_freq}
@item @code{synthesizer_modulation()}           @tab @ref{synthesizer_modulation}
@item @code{synthesizer_mod_ampl()}             @tab @ref{synthesizer_mod_ampl}
@item @code{synthesizer_mod_type()}             @tab @ref{synthesizer_mod_type}
@end multitable


@node ips20_4, keithley228a, hp8672a, Device Reference
@iftex
@subheading Oxford Magnet Sweep Power Supply IPS20-4
@end iftex
@ifnottex
@section Oxford Magnet Sweep Power Supply IPS20-4
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{ips20_4}

@paragraphindent 0
@strong{Description}: Sweep power supply for the Oxford superconducting
magnet used for Berlin @w{360 GHz} spektrometer.

@paragraphindent 0
Please note: With this module the functions expect arguments in terms of
the currents through the sweep coil (or current changes), not in field
units!

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488) via the Oxford ITC 503
temperature controller transfering data between GPIB and Oxford ISOBUS.

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}              @tab @ref{magnet_name}
@item @code{magnet_setup()}             @tab @ref{magnet_setup}
@item @code{get_field()}                @tab @ref{get_field}
@item @code{set_field()}                @tab @ref{set_field}
@item @code{magnet_sweep_rate()}        @tab @ref{magnet_sweep_rate}
@item @code{magnet_sweep()}             @tab @ref{magnet_sweep}
@item @code{reset_field()}              @tab @ref{reset_field}
@item @code{magnet_goto_field_on_end}   @tab @ref{magnet_goto_field_on_end}
@end multitable


@node keithley228a, kontron4060, ips20_4, Device Reference
@iftex
@subheading Magnet Power Supply Keithley 228A (Berlin W-Band)
@end iftex
@ifnottex
@section Magnet Power Supply Keithley 228A (Berlin W-Band)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{keithley228a}

@paragraphindent 0
@strong{Description}: Keithley 228A power supply used as sweep coil
power supply for the Berlin W-band spectrometer. In order to improve the
current resolution an aditional voltage source is needed. Currently this
done via the DAC output @code{6} (can be changed by one of the
functions) of the Stanford Research lock-in amplifier SR510 and the
module @code{sr510} must be listed before the power supply
module. Alternatively, after minor changes to the configuration file,
also other lock-in amplifiers can be used.

@paragraphindent 0
Please note: With this module the functions expect arguments in terms of
the currents through the sweep coil, not in field units!

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}            @tab @ref{magnet_name}
@item @code{magnet_setup()}           @tab @ref{magnet_setup}
@item @code{magnet_use_correction()}  @tab @ref{magnet_use_correction}
@item @code{magnet_use_dac_port()}    @tab @ref{magnet_use_dac_port}
@item @code{set_field()}              @tab @ref{set_field}
@item @code{get_field()}              @tab @ref{get_field}
@item @code{sweep_up()}               @tab @ref{sweep_up}
@item @code{sweep_down()}             @tab @ref{sweep_down}
@item @code{reset_field()}            @tab @ref{reset_field}
@end multitable

@node kontron4060, lakeshore330, keithley228a, Device Reference
@iftex
@subheading Kontron 4060 Voltmeter
@end iftex
@ifnottex
@section Kontron 4060 Voltmeter
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{kontron4060}

@paragraphindent 0
@strong{Description}: Kontron digital voltmeter 4060.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{voltmeter_name()}            @tab @ref{voltmeter_name}
@item @code{voltmeter_get_data()}        @tab @ref{voltmeter_get_data}
@item @code{voltmeter_ac_measurement()}  @tab @ref{voltmeter_ac_measurement}
@item @code{voltmeter_dc_measurement()}  @tab @ref{voltmeter_dc_measurement}
@end multitable


@node lakeshore330, lecroy9400, kontron4060, Device Reference
@iftex
@subheading Lake Shore 330 Temperature Controller
@end iftex
@ifnottex
@section Lake Shore 330 Temperature Controller
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{lakeshore330}

@paragraphindent 0
@strong{Description}: Lake Shore 330 temperature controller. Currently
only temperature measurements are supported, no automatic adjustment of
the temperature.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{temp_contr_name()}            @tab @ref{temp_contr_name}
@item @code{temp_contr_temperature()}     @tab @ref{temp_contr_temperature}
@item @code{temp_contr_sample_channel()}  @tab @ref{temp_contr_sample_channel}
@item @code{temp_contr_sensor_unit()}     @tab @ref{temp_contr_sensor_unit}
@item @code{temp_contr_lock_keyboard()}   @tab @ref{temp_contr_lock_keyboard}
@end multitable


@node lecroy9400, me6000, lakeshore330, Device Reference
@iftex
@subheading LeCroy Digitizing Oscilloscope 9400
@end iftex
@ifnottex
@section LeCroy Digitizing Oscilloscope 9400
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{lecroy9400}

@paragraphindent 0
@strong{Description}: Lecroy Digitizing Oscilloscope 9400, 2 measurement
channels, 2 function channels (needed for averaging).

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                 @tab @ref{digitizer_name}
@c @code{@item digitizer_define_window()}      @tab @ref{@item digitizer_define_window}
@item @code{digitizer_timebase()}             @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}       @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}          @tab @ref{digitizer_sensitivity}
@item @code{digitizer_averaging()}            @tab @ref{digitizer_averaging}
@item @code{digitizer_num_averages()}         @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}        @tab @ref{digitizer_record_length}
@c @code{@item digitizer_trigger_position()}  @tab @ref{@item digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}      @tab for internal use only
@c @code{@item digitizer_trigger_channel()}   @tab @ref{@item digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}    @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_curve()}            @tab @ref{digitizer_get_curve}
@c @code{@item digitizer_get_curve_fast()}    @tab @ref{@item digitizer_get_curve_fast}
@c @code{@item digitizer_run()}               @tab @ref{@item digitizer_run}
@end multitable


@node  me6000, ni6601, lecroy9400, Device Reference
@iftex
@subheading Meilhaus Electronic GmbH ME-6000 and ME-6100 DAC card
@end iftex
@ifnottex
@section Meilhaus Electronic GmbH ME-6000 and ME-6100 DAC card
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{me6000}

@paragraphindent 0
@strong{Description}: Digital-to-analog converter card with 4, 8 or 16
output ports, depending on model of card.

@paragraphindent 0
@strong{Controlled via}: PCI card (required Linux device driver and
library are part of the @code{fsc2} package)

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{daq_name()}                        @tab @ref{daq_name}
@item @code{daq_set_voltage()}                 @tab @ref{daq_set_voltage}
@end multitable


@node  ni6601, pt2025, me6000, Device Reference
@iftex
@subheading National Instruments 6601 GPCT card
@end iftex
@ifnottex
@section National Instruments 6601 GPCT card
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{ni6601}

@paragraphindent 0
@strong{Description}: General purpose counter and timer card with 4
channels, used for event counting and pulse creation.

@paragraphindent 0
@strong{Controlled via}: PCI card (required Linux device driver and
library are part of the @code{fsc2} package)

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{counter_name()}                     @tab @ref{counter_name}
@item @code{counter_start_continuous_counter()} @tab @ref{counter_start_continuous_counter}
@item @code{counter_start_timed_counter()}      @tab @ref{counter_start_timed_counter}
@item @code{counter_timed_count()}              @tab @ref{counter_timed_count}
@item @code{counter_intermediate_count()}       @tab @ref{counter_intermediate_count}
@item @code{counter_final_count()}              @tab @ref{counter_final_count}
@item @code{counter_stop_counter()}             @tab @ref{counter_stop_counter}
@item @code{counter_single_pulse()}             @tab @ref{counter_single_pulse}
@item @code{counter_continuous_pulses()}        @tab @ref{counter_continuous_pulses}
@item @code{counter_dio_read()}                 @tab @ref{counter_dio_read}
@item @code{counter_dio_write()}                @tab @ref{counter_dio_write}
@end multitable


@node pt2025, rs_spec10, ni6601, Device Reference
@iftex
@subheading Metrolab NMR Teslameter PT2025
@end iftex
@ifnottex
@section Metrolab NMR Teslameter PT2025
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{pt2025}

@paragraphindent 0
@strong{Description}: Metrolab NMR Teslameter PT2025 - module currently
only deals with the 1.5 T to 3.4 T probe and fields above 3.15
T. Measured fields are returned in Gauss, not Tesla!

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{gaussmeter_name()}               @tab @ref{gaussmeter_name}
@item @code{gaussmeter_field()}              @tab @ref{gaussmeter_field}
@item @code{measure_field()}                 @tab @ref{measure_field}
@item @code{gaussmeter_resolution()}         @tab @ref{gaussmeter_resolution}
@item @code{gaussmeter_probe_orientation()}  @tab @ref{gaussmeter_probe_orientation}
@end multitable


@node rs_spec10, rs690, pt2025, Device Reference
@iftex
@subheading Roper Scientific Spec-10 CCD Camera
@end iftex
@ifnottex
@section Roper Scientific Spec-10 CCD Camera
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{rs_spec10}

@paragraphindent 0
@strong{Description}: Roper Scientific Spec-10 CCD camera, no shutter,
cooling with LN.

@paragraphindent 0
@strong{Controlled via}: PCI card, requiring a Linux device driver and
the PVCAM library (at least version 2.6.4-2) that both are available
from Roper Scientific.

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{ccd_camera_name()}            @tab @ref{ccd_camera_name}
@item @code{ccd_camera_roi()}             @tab @ref{ccd_camera_roi}
@item @code{ccd_camera_binning()}         @tab @ref{ccd_camera_binning}
@item @code{ccd_camera_binning_method()}  @tab @ref{ccd_camera_binning_method}
@item @code{ccd_camera_exposure_time()}   @tab @ref{ccd_camera_exposure_time}
@item @code{ccd_camera_clear_cycles()}    @tab @ref{ccd_camera_clear_cycles}
@item @code{ccd_camera_get_image()}       @tab @ref{ccd_camera_get_image}
@item @code{ccd_camera_get_spectrum()}    @tab @ref{ccd_camera_get_spectrum}
@item @code{ccd_camera_temperature()}     @tab @ref{ccd_camera_temperature}
@item @code{ccd_camera_pixel_size()}      @tab @ref{ccd_camera_pixel_size}
@item @code{ccd_camera_pixel_area()}      @tab @ref{ccd_camera_pixel_area}
@end multitable


@node rs690, s_band_magnet_broad, rs_spec10, Device Reference
@iftex
@subheading Interface Technology RS690 Word Generator (Berlin 360 GHz)
@end iftex
@ifnottex
@section Interface Technology RS690 Word Generator (Berlin 360 GHz)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{rs690}

@paragraphindent 0
@strong{Description}: Interface Technology RS690 Word Generator, used as pulser
for the Berlin 360 GHz spectrometer.

@paragraphindent 0
Time base: internal clock @w{4 ns}, @w{8 ns} and @w{16 ns}, external
clock @w{4 ns} and longer (either via @code{TTL} or @code{ECL} level
input connector)@*
Trigger-in: either via @code{TTL} or @code{ECL} level input connector@*
Number of channels: 16 (4 per output connector) with internal @w{4 ns}
time base or external clock, 32 (8 per output connector) with internal @w{8 ns}
time base, 64 (16 per output connector) with internal @w{16 ns} time base@*
Maximum repetition time: 2,147,483,647 times the time base for external
clock or @w{4 ns} internal clock (i.e.@: @w{8.5899 s}), @w{17.1799 s} for
@w{8 ns} internal time base, @w{34.3597} for @w{16 ns} internal time base

@paragraphindent 0
When using an external clock or the internal @w{4 ns} time base under
for certain pulse seqences the repetition time may be increases slightly
(but never more than 3 times the time base), with an @w{8 ns} time base
the repetition time may become larger by @w{8 ns}.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{pulser_name()}            @tab @ref{pulser_name}
@item @code{pulser_state()}           @tab @ref{pulser_state}
@item @code{pulser_channel_state()}   @tab @ref{pulser_channel_state}
@item @code{pulser_update()}          @tab @ref{pulser_update}
@item @code{pulser_shift()}           @tab @ref{pulser_shift}
@item @code{pulser_increment()}       @tab @ref{pulser_increment}
@item @code{pulser_reset()}           @tab @ref{pulser_reset}
@item @code{pulser_pulse_reset()}     @tab @ref{pulser_pulse_reset}
@item @code{pulser_lock_keyboard()}   @tab @ref{pulser_lock_keyboard}
@item @code{pulser_shape_to_defense_minimum_distance()} @tab @ref{pulser_shape_to_defense_minimum_distance}
@item @code{pulser_defense_to_shape_minimum_distance()} @tab @ref{pulser_defense_to_shape_minimum_distance}
@item @code{pulser_automatic_shape_pulses()} @tab @ref{pulser_automatic_shape_pulses}
@item @code{pulser_automatic_twt_pulses()} @tab @ref{pulser_automatic_twt_pulses}
@item @code{pulser_minimum_twt_pulse_distance()} @tab @ref{pulser_minimum_twt_pulse_distance}
@item @code{pulser_show_pulses()}     @tab @ref{pulser_show_pulses}
@item @code{pulser_dump_pulses()}     @tab @ref{pulser_dump_pulses}
@end multitable


@node s_band_magnet_broad, s_band_magnet_narrow, rs690, Device Reference
@iftex
@subheading S-band Magnet Power Supply (broad range)
@end iftex
@ifnottex
@section S-band Magnet Power Supply (broad range)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{s_band_magnet_broad}

@paragraphindent 0
@strong{Description}: Power supply for magnet with home-built computer
control to be used with the Frankfurt S-band spectrometer. Field range
is 0 G to 2047.5 G with a resolution of 0.5 G.

@paragraphindent 0
@strong{Controlled via}: Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}            @tab @ref{magnet_name}
@item @code{magnet_setup()}           @tab @ref{magnet_setup}
@item @code{set_field()}              @tab @ref{set_field}
@item @code{get_field()}              @tab @ref{get_field}
@item @code{sweep_up()}               @tab @ref{sweep_up}
@item @code{sweep_down()}             @tab @ref{sweep_down}
@item @code{reset_field()}            @tab @ref{reset_field}
@item @code{magnet_goto_field_on_end} @tab @ref{magnet_goto_field_on_end}
@end multitable


@node s_band_magnet_narrow, spectrapro_300i, s_band_magnet_broad, Device Reference
@iftex
@subheading S-band Magnet Power Supply (narrow range)
@end iftex
@ifnottex
@section S-band Magnet Power Supply (narrow range)
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{s_band_magnet_narrow}

@paragraphindent 0
@strong{Description}: Power supply for magnet with home-built computer
control to be used with Frankfurt S-band spectrometer. Field range is
1070 G to 1479.5 G with a resolution of 0.1 G.

@paragraphindent 0
@strong{Controlled via}: Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{magnet_name()}            @tab @ref{magnet_name}
@item @code{magnet_setup()}           @tab @ref{magnet_setup}
@item @code{set_field()}              @tab @ref{set_field}
@item @code{get_field()}              @tab @ref{get_field}
@item @code{sweep_up()}               @tab @ref{sweep_up}
@item @code{sweep_down()}             @tab @ref{sweep_down}
@item @code{reset_field()}            @tab @ref{reset_field}
@item @code{magnet_goto_field_on_end} @tab @ref{magnet_goto_field_on_end}
@end multitable


@node spectrapro_300i, sr510, s_band_magnet_narrow, Device Reference
@iftex
@subheading Acton Research SpectraPro-300i Monochromator
@end iftex
@ifnottex
@section Acton Research SpectraPro-300i Monochromator
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{spectrapro_300i}

@paragraphindent 0
@strong{Description}: Acton Research SpectraPro-300i monochromator, up
to 3 gratings on up to 3 turrets.

@paragraphindent 0
@strong{Controlled via}:  Serial port

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{monochromator_name()}             @tab @ref{monochromator_name}
@item @code{monochromator_grating()}          @tab @ref{monochromator_grating}
@item @code{monochromator_wavelength()}       @tab @ref{monochromator_wavelength}
@item @code{monochromator_groove_density()}   @tab @ref{monochromator_groove_density}
@item @code{monochromator_wavelength_axis()}  @tab @ref{monochromator_wavelength_axis}
@item @code{monochromator_calc_wavelength()}  @tab @ref{monochromator_calc_wavelength}
@item @code{monochromator_set_calibration()}  @tab @ref{monochromator_set_calibration}
@item @code{monochromator_load_calibration()} @tab @ref{monochromator_load_calibration}
@item @code{monochromator_zero_offset()}      @tab @ref{monochromator_zero_offset}
@item @code{monochromator_grating_adjust()}   @tab @ref{monochromator_grating_adjust}
@item @code{monochromator_turret()}           @tab @ref{monochromator_turret}
@item @code{monochromator_install_grating()}  @tab @ref{monochromator_install_grating}
@item @code{monochromator_calibrate()}        @tab @ref{monochromator_calibrate}
@end multitable



@node sr510, sr530, spectrapro_300i, Device Reference
@iftex
@subheading Stanford Research Lock-In Amplifier SR510
@end iftex
@ifnottex
@section Stanford Research Lock-In Amplifier SR510
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{sr510}

@paragraphindent 0
@strong{Description}: Stanford Research lock-in amplifier SR510, single
channel, no internal modulation, 4 ADC and 2 DAC ports.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{lockin_name()}           @tab @ref{lockin_name}
@item @code{lockin_get_data()}       @tab @ref{lockin_get_data}
@item @code{lockin_get_adc_data()}   @tab @ref{lockin_get_adc_data}
@item @code{lockin_sensitivity()}    @tab @ref{lockin_sensitivity}
@item @code{lockin_time_constant()}  @tab @ref{lockin_time_constant}
@item @code{lockin_phase()}          @tab @ref{lockin_phase}
@item @code{lockin_ref_freq()}       @tab @ref{lockin_ref_freq}
@item @code{lockin_dac_voltage()}    @tab @ref{lockin_dac_voltage}
@item @code{lockin_lock_keyboard()}  @tab @ref{lockin_lock_keyboard}
@end multitable


@node sr530, sr810, sr510, Device Reference
@iftex
@subheading Stanford Research Lock-In Amplifier SR530
@end iftex
@ifnottex
@section Stanford Research Lock-In Amplifier SR530
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{sr530}

@paragraphindent 0
@strong{Description}: Stanford Research lock-in amplifier SR530, two
channels, no internal modulation, 4 ADC and 2 DAC ports.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{lockin_name()}           @tab @ref{lockin_name}
@item @code{lockin_get_data()}       @tab @ref{lockin_get_data}
@item @code{lockin_get_adc_data()}   @tab @ref{lockin_get_adc_data}
@item @code{lockin_sensitivity()}    @tab @ref{lockin_sensitivity}
@item @code{lockin_time_constant()}  @tab @ref{lockin_time_constant}
@item @code{lockin_phase()}          @tab @ref{lockin_phase}
@item @code{lockin_ref_freq()}       @tab @ref{lockin_ref_freq}
@item @code{lockin_dac_voltage()}    @tab @ref{lockin_dac_voltage}
@item @code{lockin_lock_keyboard()}  @tab @ref{lockin_lock_keyboard}
@end multitable


@node sr810, sr830, sr530, Device Reference
@iftex
@subheading Stanford Research Lock-In Amplifier SR810
@end iftex
@ifnottex
@section Stanford Research Lock-In Amplifier SR810
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{sr810}

@paragraphindent 0
@strong{Description}: Stanford Research lock-in amplifier SR810, one
channel, auto acquisition, internal modulation, 4 ADC and 4 DAC ports.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{lockin_name()}              @tab @ref{lockin_name}
@item @code{lockin_auto_setup()}        @tab @ref{lockin_auto_setup}
@item @code{lockin_auto_acquisition()}  @tab @ref{lockin_auto_acquisition}
@item @code{lockin_get_data()}          @tab @ref{lockin_get_data}
@item @code{lockin_get_adc_data()}      @tab @ref{lockin_get_adc_data}
@item @code{lockin_dac_voltage()}       @tab @ref{lockin_dac_voltage}
@item @code{lockin_sensitivity()}       @tab @ref{lockin_sensitivity}
@item @code{lockin_time_constant()}     @tab @ref{lockin_time_constant}
@item @code{lockin_phase()}             @tab @ref{lockin_phase}
@item @code{lockin_ref_freq()}          @tab @ref{lockin_ref_freq}
@item @code{lockin_harmonic()}          @tab @ref{lockin_harmonic}
@item @code{lockin_ref_mode()}          @tab @ref{lockin_ref_mode}
@item @code{lockin_ref_level()}         @tab @ref{lockin_ref_level}
@item @code{lockin_lock_keyboard()}     @tab @ref{lockin_lock_keyboard}
@end multitable


@node sr830, tds520, sr810, Device Reference
@iftex
@subheading Stanford Research Lock-In Amplifier SR830
@end iftex
@ifnottex
@section Stanford Research Lock-In Amplifier SR830
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{sr830}

@paragraphindent 0
@strong{Description}: Stanford Research lock-in amplifier SR830, two
channels, auto acquisition, internal modulation, 4 ADC and 4 DAC ports.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{lockin_name()}              @tab @ref{lockin_name}
@item @code{lockin_auto_setup()}        @tab @ref{lockin_auto_setup}
@item @code{lockin_auto_acquisition()}  @tab @ref{lockin_auto_acquisition}
@item @code{lockin_get_data()}          @tab @ref{lockin_get_data}
@item @code{lockin_get_adc_data()}      @tab @ref{lockin_get_adc_data}
@item @code{lockin_dac_voltage()}       @tab @ref{lockin_dac_voltage}
@item @code{lockin_sensitivity()}       @tab @ref{lockin_sensitivity}
@item @code{lockin_time_constant()}     @tab @ref{lockin_time_constant}
@item @code{lockin_phase()}             @tab @ref{lockin_phase}
@item @code{lockin_ref_freq()}          @tab @ref{lockin_ref_freq}
@item @code{lockin_harmonic()}          @tab @ref{lockin_harmonic}
@item @code{lockin_ref_mode()}          @tab @ref{lockin_ref_mode}
@item @code{lockin_ref_level()}         @tab @ref{lockin_ref_level}
@item @code{lockin_lock_keyboard()}     @tab @ref{lockin_lock_keyboard}
@end multitable


@node tds520, tds520a, sr830, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS520
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS520
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds520}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS520, 2
measurement channels, 2 auxiliary channels, 3 math channels and 4
reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node tds520a, tds520c, tds520, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS520A
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS520A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds520a}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS520A, 2
measurement channels, 2 auxiliary channels, 3 math channels and 4
reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node tds520c, tds540, tds520a, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS520C
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS520C
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds520c}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS520C, 2
measurement channels, 2 auxiliary channels, 3 math channels and 4
reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node tds540, tds744a, tds520c, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS540
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS540
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds540}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS540, 4
measurement channels, 1 auxiliary channel (to be used as trigger input
only), 3 math channels and 4 reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node tds744a, tds754a, tds540, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS744A
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS744A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds744a}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS744A, 4
measurement channels, 1 auxiliary channel (to be used as trigger input
only), 3 math channels and 4 reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node tds754a, thurlby330, tds744a, Device Reference
@iftex
@subheading Tektronix Digitizing Oscilloscope TDS754A
@end iftex
@ifnottex
@section Tektronix Digitizing Oscilloscope TDS754A
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{tds754a}

@paragraphindent 0
@strong{Description}: Tektronix Digitizing Oscilloscope TDS754A, 4
measurement channels, 1 auxiliary channel (to be used as trigger input
only), 3 math channels and 4 reference channels.

@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{digitizer_name()}                @tab @ref{digitizer_name}
@item @code{digitizer_define_window()}       @tab @ref{digitizer_define_window}
@item @code{digitizer_change_window()}       @tab @ref{digitizer_change_window}
@item @code{digitizer_window_position()}     @tab @ref{digitizer_window_position}
@item @code{digitizer_window_width()}        @tab @ref{digitizer_window_width}
@item @code{digitizer_timebase()}            @tab @ref{digitizer_timebase}
@item @code{digitizer_time_per_point()}      @tab @ref{digitizer_time_per_point}
@item @code{digitizer_sensitivity()}         @tab @ref{digitizer_sensitivity}
@item @code{digitizer_num_averages()}        @tab @ref{digitizer_num_averages}
@item @code{digitizer_record_length()}       @tab @ref{digitizer_record_length}
@item @code{digitizer_trigger_position()}    @tab @ref{digitizer_trigger_position}
@item @code{digitizer_meas_channel_ok()}     @tab for internal use only
@item @code{digitizer_trigger_channel()}     @tab @ref{digitizer_trigger_channel}
@item @code{digitizer_start_acquisition()}   @tab @ref{digitizer_start_acquisition}
@item @code{digitizer_get_area()}            @tab @ref{digitizer_get_area}
@item @code{digitizer_get_area_fast()}       @tab @ref{digitizer_get_area_fast}
@item @code{digitizer_get_curve()}           @tab @ref{digitizer_get_curve}
@item @code{digitizer_get_curve_fast()}      @tab @ref{digitizer_get_curve_fast}
@item @code{digitizer_get_amplitude()}       @tab @ref{digitizer_get_amplitude}
@item @code{digitizer_get_amplitude_fast()}  @tab @ref{digitizer_get_amplitude_fast}
@item @code{digitizer_run()}                 @tab @ref{digitizer_run}
@item @code{digitizer_lock_keyboard()}       @tab @ref{digitizer_lock_keyboard}
@end multitable


@node thurlby330, witio_48, tds754a, Device Reference
@iftex
@subheading Thurlby & Thandar Power Supply PL330DP
@end iftex
@ifnottex
@section Thurlby & Thandar Power Supply PL330DP
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{thurlby330}

@paragraphindent 0
@strong{Description}: Thurlby & Thandar Power Supply PL330DP, 3 output
channels, voltage range: @w{0 V} to @w{32 V} with resolution of @w{10
mV}, current range: @w{0 A} to @w{3 A} with resolution of @w{1 mA}.


@paragraphindent 0
@strong{Controlled via}: GPIB bus (IEEE 488).

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{powersupply_name()}           @tab @ref{powersupply_name}
@item @code{powersupply_damping()}        @tab @ref{powersupply_damping}
@item @code{powersupply_channel_state()}  @tab @ref{powersupply_channel_state}
@item @code{powersupply_voltage()}        @tab @ref{powersupply_voltage}
@item @code{powersupply_voltage_limit()}  @tab @ref{powersupply_voltage_limit}
@item @code{powersupply_current()}        @tab @ref{powersupply_current}
@item @code{powersupply_current_limit()}  @tab @ref{powersupply_current_limit}
@end multitable


@node witio_48, ,thurlby330, Device Reference
@iftex
@subheading Wasco WITIO-48 DIO card
@end iftex
@ifnottex
@section Wasco WITIO-48 DIO card
@end ifnottex

@paragraphindent 0
@strong{Module name}: @code{witio_48}

@paragraphindent 0
@strong{Description}: ISA DIO card by Messcomp Datentechnik GmbH with
two 24-bit wide DIOs, that can be split into independent sub-DIOs.

@paragraphindent 0
@strong{Controlled via}: ISA card (required Linux device driver and
library are part of the @code{fsc2} package)

@paragraphindent 0
@strong{Supported functions}:
@multitable @columnfractions .45 .45
@item @code{dio_name()}           @tab @ref{dio_name}
@item @code{dio_mode()}           @tab @ref{dio_mode}
@item @code{dio_value()}          @tab @ref{dio_value}
@end multitable
