@c $Id$
@c
@c This file is part of fsc2.
@c
@c Fsc2 is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2, or (at your option)
@c any later version.
@c
@c Fsc2 is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with fsc2; see the file COPYING.  If not, write to
@c the Free Software Foundation, 59 Temple Place - Suite 330,
@c Boston, MA 02111-1307, USA.


@node Overview, Command Line Options, Top, Top
@chapter Overview
@cindex overview


@acronym{fsc2} is a program for remote control of cw- and pulsed EPR
spectrometers. It is basically an interpreter that executes a program
written by the experimentator to describe the experiment (in the
following called an @acronym{EDL}
@cindex @acronym{EDL}
file (@b{E}xperiment @b{D}escription @b{L}anguage)).

This approach is a bit different from the one usually used for remote
control programs with a graphical user interface where you set the
parameters to be used in the experiment and then start the experiment.

The disadvantage of the traditional kind of programs is that they
usually have to be rewritten or at least severely changed if either a
new kind of experiment is to be done or the hardware devices used in the
experiments are changed. In contrast, with @acronym{fsc2} doing a
completely new type of experiment is straight forward - all that's
needed is to write a new @acronym{EDL} program and one immediately can
start doing the new experiment. Also changing or adding new devices is
relatively simple, all that needs to be done is to write a new module
@cindex modules
. A module defines a set of functions that control the device. Modules
are usually written in C. Thus, integrating a new device into the
experiment doesn't necessitate changes in the main control program.

In the following chapters I will first explain the syntax of the
@acronym{EDL} language that is used to describe an experiment.
