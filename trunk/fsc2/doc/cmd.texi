@c $Id$

@node Command Line Options, GUI, Overview, Top
@chapter Command line options
@cindex command line options

@acronym{fsc2} can be invoked from the command line with the following
syntax:

@strong{@code{              fsc2 [OPTION] [FILE]}}

The square brackets indicate that the options as well as the file name
are optional. @code{FILE} is expected to be an @acronym{EDL} file. The
available options are:

@table @samp
@item @option{-t}
Runs a syntax check on FILE and quits. No graphic is used and all output is
written to the controlling terminal.

@item @option{-T}
Starts @acronym{fsc2} in graphics mode and immediately does a syntax
check on FILE.  When done with the check @acronym{fsc2} waits for further
commands.

@item @option{-S}
Starts @acronym{fsc2} in graphics mode and immediately does a syntax
check on FILE.  If the syntax check does not fail the experiment is
started without needing further user input.

@item @option{--delete}
Starts @acronym{fsc2} in graphics mode and loads FILE (or also tests
and/or starts the program when used in conjunction with the @code{-T} or
@code{-S} flags). The input file will be @strong{automatically deleted}
when @acronym{fsc2} is done with it, i.e.@ when either @acronym{fsc2}
exits or a new file is loaded. This flag is only useful for cases where
the input file is a temporary file that needs to be deleted when it
isn't needed anymore, so better be @strong{real careful}.

@item @option{-m button_number}
Specifies which mouse button has to be used to activate the stop button
while the experiment is running. Use @code{1} for the left mouse button,
@code{2} for the middle and @code{3} for the right mosue button. Per
default each of the three mouse buttons can be used.

@item @option{-h, --help}
Displays a very short help text and exits.

@item @option{-geometry geometry_string}
This option specifies the preferred size and position of the main
window, see man page for X for a description of the correct format for
the geometry string.

@item @option{-displayGeometry geometry_string}
Sets the preferred size and position for the display window, i.e.@: the
window with the measured data.

@item @option{-cutGeometry geometry_string}
Sets the preferred size and position for the window with the
cross-section through a 2D data set.

@item @option{-toolGeometry geometry_string}
Sets the preferred position for the window with the user defined objects
like buttons, sliders and in- and output fields.  Please note that for
this window only the position part of the geometry string will be used.

@item @option{-browserFontSize number}
Sets the size (in pixels) of the font to be used in both browsers in the
main window.

@item @option{-buttonFontSize number}
Sets the size (in pixels) of the font to be used for all buttons.

@item @option{-sliderFontSize number}
Sets the size (in pixels) of the font to be used for sliders and their
labels.

@item @option{-inputFontSize number}
Sets the size (in pixels) of the font to be used for the texts and
labels of input and output fields.

@item @option{-helpFontSize number}
Sets the size (in pixels) of the font to be used for the popup help
texts.

@item @option{-fileselectorFontSize number}
Sets the size (in pixels) of the font used in the file selector.

@item @option{-axisFont font}
This option sets the font to be used in the axes in the display window.
You will find the various X fonts in the /usr/lib/X11/fonts directory.
To find out about available X fonts the tools xlsfonts, xfontsel and xfd
can be rather useful. When you specify a font be sure to enclose the
font name in quotes if the name contains characters that the shell might
try to expand.

@end table
