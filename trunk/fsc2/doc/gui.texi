@c $Id$
@c
@c Copyright (C) 2001 Jens Thoms Toerring
@c
@c This file is part of fsc2.
@c
@c Fsc2 is free software; you can redistribute it and/or modify
@c it under the terms of the GNU General Public License as published by
@c the Free Software Foundation; either version 2, or (at your option)
@c any later version.
@c
@c Fsc2 is distributed in the hope that it will be useful,
@c but WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with fsc2; see the file COPYING.  If not, write to
@c the Free Software Foundation, 59 Temple Place - Suite 330,
@c Boston, MA 02111-1307, USA.


@node GUI, EDL, Command Line Options, Top
@chapter GUI

@ifinfo

@menu
* Main Window::        The program's main window
* Experiment Window::   The window to display experimental data
@end menu

@end ifinfo


@node Main Window, Experiment Window, GUI, GUI
@section Main Window

@ifnotinfo

Whenever you start @acronym{fsc2} you will see the following window:

@image{fsc2fig1,11cm,}

The large white area in the upper halve is the browser that contains the
text of the current @acronym{EDL} program (after you loaded it). Below
the main browser is another browser which displays error messages as
well as the output from the @acronym{EDL} program. On the right side of
the browsers is a slider that lets you move the border between both
browsers.

On the left side you have a set of buttons:
@itemize @bullet
@item The @code{Load} button opens a file selector that allows you to
select a new @acronym{EDL} program.
@item The @code{Reload} button - when you have edited the currently
loaded @acronym{EDL} program you have to click onto this button to
make @acronym{fsc2} load the changed file.
@item The @code{Edit} button opens an editor with the currently loaded
 @acronym{EDL} program. Which editor will be used depends on the
environment variable @code{EDITOR}, if it isn't set @code{vi} is used as
the default editor.
@item The @code{Test} button lets you check an @acronym{EDL} program 
after it has been loaded. While the test is running the buttons label is
changed to @code{Stop Test} and can be used to abort the test. After the
test finished succesfully the button becomes inactive until a new
program is loaded (or the current program is reloaded).
@item Using the @code{Start} button you start the execution of the
@acronym{EDL} program, i.e.@: you start the experiment.
@item The @code{Quit} button aborts @acronym{fsc2}.
@item Pressing the @code{Help} button will try to start a browser with
the HTML documentation for @acronym{fsc2}. You can select the browser to
use by setting the environment variable @code{BROWSER} to the name of
your favourite browser (at least opera, netscape, konqueror, lynx and
w3m should work without problems). The default browser is Netscape.
@item The @code{Bug report} button will open an editor window
where you can compose a bug report. When you're finished writing the
mail @acronym{fsc2} will let you decide if you want to mail me the bug
report.
@end itemize

@end ifnotinfo

@ifinfo
@ifnothtml

The first window you see when you start @acronym{fsc2} contains the
following elements:
@itemize @bullet
@item At the top the browser for displaying the @acronym{EDL} file to be run
@item Below this another browser where error messages as well as output
from the @acronym{EDL} program will be displayed.
@item On the right side of the browsers is a slider that lets you move
the border between both browsers.
@item The @code{Load} button - when you click onto it a file selector
is shown that allows you to select a new @acronym{EDL} program.
@item The @code{Reload} button - when you have edited the currently
loaded @acronym{EDL} program you have to click onto this button to
make @acronym{fsc2} load the changed file.
@item The @code{Edit} button - when you click onto it an editor will
open up with the curently loaded @acronym{EDL} program. Which
editor will be used depends on the environment variable @code{EDITOR},
if it isn't set @code{vi} is used as the default editor.
@item The @code{Test} button lets you check an @acronym{EDL} program 
after it has been loaded. While the test is running the buttons label is
changed to @code{Stop Test} and can be used to abort the test. After the
test finished succesfully the button becomes inactive until a new
program is loaded (or the current program is reloaded).
@item Using the @code{Start} button you start execution of the
@acronym{EDL} program, i.e.@: you start the measurement.
@item The @code{Quit} button is for leaving @acronym{fsc2}.
@item Pressing the @code{Help} button will start try to start a browser
with the HTML documentation for @acronym{fsc2}. You can select the browser to
use by setting the environment variable @code{BROWSER} to the name of
your favourite browser (at least opera, netscape, konqueror, lynx and
w3m should work without problems). The default browser is Netscape.
@item Finally, the @code{Bug report} button will open an editor window
where you can compose a bug report. When you're finished writing the
mail @acronym{fsc2} will let you decide if you want to mail me the bug
report.
@end itemize

@end ifnothtml
@end ifinfo

In each button one of the characters of the label is underlined. By
pressing the key for this letter each button can be triggered via the
keyboard - but note that, if the underlined letter is an uppercase
character, you have to enter the uppercase character from the keyboard!

While a test of a @acronym{EDL} program is running most of the buttons
can not be used (indicated by their labels becoming grayed out). The
label of the @code{Test} button will become @code{Stop Test} - so if you
want to stop the test press the @code{Test} button again. After a test
has been run on the @acronym{EDL} program the @code{Test} button will
remain grayed out until a new program is loaded.

During the test @acronym{fsc2} may detect problems with the
@acronym{EDL} program or even errors. It then will print messages in the
lower browser. There are three categories of messages: Warnings,
messages for severe problems and fatal error messages. Warnings are
printed in green, messages for severe problems in blue and messages for
fatal errors in red (in the latter case the test is also aborted
immediately).

To start the experiment click onto the @code{Start} button. If the
program hasn't been tested a test will be run now. When the test succeeds
the experiment is started. While he devices are initialized the text in
the @code{Star} button changes to @code{Stop} and clicking on the button
lets you interrupt the device initialization stage. When the device
intialization is finished a new window opens up for displaying the
measured data that will be described in the next section.


@ifnotinfo
The next figure shows you the main window of @acronym{fsc2} with an
@acronym{EDL} program loaded (the name of the loaded program is shown in
the widow title) and the test already been done. The program has written
out some text already during the test, thus some lines are shown in the
output browser.

@image{fsc2fig2,11cm,}

@end ifnotinfo


@node Experiment Window, , Main Window, GUI
@section Experiment Window

When an experiment is started another window will pop up. It is up to
the writer of the @acronym{EDL} program to choose if the window will be
used for displaying just curves or color-coded surfaces, see the
functions @code{init_1d()} and @code{init_2d()} in the later sections.
The first type of display is well suited for showing the results of
typical cw-measured EPR data or traces fetched from digitizers, while
the second type is for visualizing real 2d-experiments, i.e.@: all
experiments where not just one parameter is changed during the
experiment but two.


@anchor{1D-Display}
@subsection 1D-Display
@cindex 1D-Display

@ifnotinfo
Here's a typical example of the kind of display you get while doing an
experiment:

@image{fsc2fig3,11cm,}

The most prominent feature is the area for displaying the measured
data. In this case two different curves are displayed simultanuously
(but you can have up to four). They show data from the x- and y-channel
of a lock-in amplifier while recording a cw-EPR experiment - obviously
the lock-in's phase setting isn't optimal yet.

Below and to the left of this main display area are two areas showing
the x- and y-scales. The fact that the lines in both the axis areas are
drawn in red indicate that the scales are valid for the first (red) curve
(in this case the scales are also correct for the second (green) curve
because no rescaling has been done).

The topmost buttons on the left side (which both are switched on) let
you decide which of the curves will be included in rescaling operations
- this way you can rescale curves individually to account for e.g.@:
different sensitivity settings.

The two buttons below, labeled @code{Undo} and @code{Print} allow you to
undo the last rescaling operation or to send a snapshot of the current
results to a printer (or, alternatively, write it to a file).

The @code{Stop} button lets you abort the currently running experiment -
when the experiment is finished its label changes to
@code{Close}. Finally, the button labeled @code{FS} is the "Full scale"
button. While this button is active the display is resized automatically
so that all data fit into the display area.

@end ifnotinfo

@subsubsection Examining data

If you want to find out the exact values of your newly measured data
during the experiment you have to move the mouse into the display area
onto the point you're interested in. Now press both the left and the
right mouse button simultaneously (or first the left one, then the
middle one while keeping the left button pressed down). The cursor
changes to a crosshair
@ifnotinfo
cursor, @image{cursor4,5mm,},
@end ifnotinfo
@ifnothtml
@ifnottex
cursor
@end ifnottex
@end ifnothtml
and in the upper left hand corner a pair of values with the exact
coordinates (in the units of the axis scales) of the current mouse
position is shown. Because different curves can have a different scaling
(see below), if you have more than one curve displayed the coordinates
in the scaling system of each of the curves are shown (in the color of
the curve they belong to).

Beside finding out the exact values of your measured data you also may
determine differences between different data points. If you press both
the left and the right mouse button simultaneously the cursor changes to
an encircled crosshair
@ifnotinfo
cursor, @image{cursor5,5mm,},
@end ifnotinfo
@ifnothtml
@ifnottex
cursor
@end ifnottex
@end ifnothtml
and a circle is drawn at the position where you pressed the mouse
button.  When you move the mouse (while keeping both middle and right
mouse buttons pressed down) a vertical and a horizontal dashed line from
the starting point to the current mouse position is drawn and in the
left upper corner of the display area pairs of x- and y-differences (in
units of the axis scales) between the two points are shown (and updated
whenever you move the mouse). Again, for each curve a pair of values is
displayed in the color of the curve they belong to.


@subsubsection Rescaling and moving


To zoom into the data displayed in the window click the left mouse
button in the area where the data are displayed. If you do so the arrow
mouse pointer changes to a
@ifnotinfo
symbol, @image{cursor1,5mm,},
@end ifnotinfo
@ifnothtml
@ifnottex
symbol
@end ifnottex
@end ifnothtml
indicating
that you're in zoom mode. If you now move the mouse while keeping the
left moused button pressed down a dashed rectangular box is drawn from
the position where the mouse button was pressed first to the current
mouse position. When the left mouse button is released the display will
be rescaled so that the area of this box is magnified to fill the whole
display area. You can also use this method in the areas of the
axis. Here also a small box is shown, indicating the section that will
be magnified. If done in the area of the x-axis only the x-scaling is
changed, while when used in the y-axis area only a magnification in
y-direction happens.

You can also move the curves around on the screen. When you pres the
middle mouse button somewhere in the display are the cursor changes to a
@ifnotinfo
hand, @image{cursor2,5mm,}.
@end ifnotinfo
@ifnothtml
@ifnottex
hand.
@end ifnottex
@end ifnothtml
As long as you keep the middle mouse button pressed down the displayed
curves will move around following the mouse. As in the case of zooming
you can restrict movements to either the x- or y-direction by pressing
the middle mousebutton in the area of the x-axis or the y-axis.

Finally, there's a third method to change the scaling. Whenever you
press the right mouse button in either the display area or the axis
fields the cursor changes to a magnifiying
@ifnotinfo
glass, @image{cursor3,5mm,}.
@end ifnotinfo
@ifnothtml
@ifnottex
glass.
@end ifnottex
@end ifnothtml
When you move the mouse at first nothing will happen, but if you release
the mouse button the display scaling will either get magnified or
de-magnified. This follows the some simple rules: The point where you
first pressed the right mouse button will stay at exactly the same
position. If you move the mouse up, the display will be de-magnified in
y-direction only, if you move the mouse down, the y-scale factor becomes
larger, i.e.@: you do a zoom in y-direction. By moving the mouse to the
right you can reduce the x-scale, by moving to the left you increase it.
If you do this operation in the areas of either the x- or y-axis only
the corresponding scaling gets changed. The factor by which the scale
gets changed depends on how far away from the starting point you moved
the mouse before releasing the left button. If you move the mouse along
the whole length of the display area the scaling is changed by a factor
of 4.

You don't have to change the scaling or the position for all curves at
once - this is what the buttons with the numbers in the colors of the
curves are meant for. Rescaling or moving will only apply to curves for
which the corresponding button is active, i.e.@: pressed down (if not
activated they are drawn with a grey background instead of the color of
the curve they are associated with). By de-activating one or more of the
buttons you can extempt the corresponding curves (i.e.@: the curves with
the color as the button has in active state) from being rescaled or
moved around.

Of course, this leads to a problem: If you de-activate some of the
buttons and rescale, the question is for which curve the axis scales are
valid now. That's the reason why the horizontal line of the x-axis and
the vertical line of the y-axis is not black but colored: When the lines
are red, you can be sure that the displayed axis scales are valid for
(at least) the red curve, if they are green they are valid for (at
least) the green curve, etc. As a rule, the axis scale is always valid
for the lowest numbered curve for which its button is activated. That's
also the reason why, when examining data (using either the middle or
right button together with the left button), not just one pair of values
is displayed but as many pairs as there are curves -- the scaling for
each of the curves could be different

Finally, when you zoom into the display parts of a curve or even
complete curves will not fit into the display area anymore. To indicate
into which direction you have to look for the missing parts of the curve
an arrow in the color of the curve will be shown for each direction in
which non-displayable data the curve can be found.

Whenever you rescale curves or move them around the "Full Scale" button,
labeled @code{FS}, will become in-active (its color changes from green
to grey). When you want to get back to the full scale display you simply
have to click onto it and all curves (even the ones that usually extempt
from rescaling because their button is in-active) get rescaled so that
all data will fit into the display. A side effect of having the
@code{FS} button active is that the display will be rescaled
automatically when new data arrive that wouldn't fit into the display
area. To switch this behaviour off simply deactivate the @code{FS}
button.


@anchor{2D-Display}
@subsection 2D-Display
@cindex 2D-Display

@ifnotinfo
@image{fsc2fig4,11cm,}
@image{fsc2fig5,11cm,}
@end ifnotinfo
