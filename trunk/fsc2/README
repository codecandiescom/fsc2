About fsc2
----------

fsc2 is a program for controlling spectrometers.

Programs for controlling spectrometers are usually home-written and
often restricted to doing a certain set of experiments and a fixed
set of devices. In contrast, fsc2 is much more flexible because it
interprets a rather simple but powerful scripting language (EDL,
Experiment Description Language) and has a strictly modular approach
to handling of devices. This allows setting up a completely new
experiment or changing an already existing one fast and easily
without requiring any detailed knowledge of the internals of fsc2
or how exactly devices are to be controlled by the computer.


Download
--------

You can download the sources for the program and the device modules from:

       http://www.physik.fu-berlin.de/~toerring/fsc2.tar.gz

The documentation in Postscript or PDF format can be downloaded from:

	   http://www.physik.fu-berlin.de/~toerring/fsc2/fsc2.ps.gz
	   http://www.physik.fu-berlin.de/~toerring/fsc2/fsc2/fsc2.pdf

You also will find an online version of the documentation at:

       http://www.physik.fu-berlin.de/~toerring/fsc2


Features
--------

* The EDL language used top describe experiments is similar to other
  medium to high level languages, borrowing from e.g. MathLab, Fortran,
  C and Perl etc. Moreover, it comes with a lot of functions for data
  handling, displaying and saving in completely user defined ways. Thus
  writing a description for a new experiment or adapting an already
  existing EDL script won't be difficult for anyone remotely acquainted
  with one of the above mentioned programming languages.

* Device are not hard-coded into fsc2. Instead, devices are dealt with
  by modules that get loaded on demand (a single instruction in an EDL
  script). For each sort of devices a set of EDL functions exists to
  set up the device and fetch measured data. This allows e.g. to employ
  a different device with similar functionality by usually changing not
  more than a single line in an EDL script.

* fsc2 allows other programs to send it EDL scripts for execution.
  Thus one may write scripts for standard experiments that in turn
  automatically create EDL scripts from user input, for example via
  a graphical user interface. fsc2 even comes with a tool that auto-
  matically generates such scripts from slightly modified EDL programs.
  Once such a script has been created, "normal" users don't have to
  know how to write or change EDL programs, thus retaining all the
  convenience of the traditional type of programs but without
  sacrificing its flexibility.

* fsc2 has a built-in simple web server (only running on user demand)
  that allows the user to remotely monitor the state of an experiment.

* Currently fsc2 controls devices that are either connected via the
  serial ports or the GPIB bus.

* Writing new device modules (or adapting existing ones for a new device)
  shouldn't be too difficult for anyone having some experience with
  writing programs in C. About 30 modules for quite a range of devices
  are already part of the package and can be used as a starting point
  for developing drivers for new devices.

* fsc2 is well-documented, an 180 page documentation in HTML, info,
  PostScript and PDF format, covering all aspects of fsc2, i.e the
  graphical interface, the EDL language, device functions and writing of
  new device modules, is part of the package.

* fsc2 has been extensively tested and is currently used to control seven
  EPR spectrometers, using a broad range of different devices and   
  experimental techniques.

* The complete sources for the program and all device modules are available
  under the GNU Public License, so they can be adapted or extended to fit
  all special requirements.


Currently suported devices
--------------------------

 Digitizing oscilloscopes:

  * Tektronix Digitizing Oscilloscopes TDS 520
  * Tektronix Digitizing Oscilloscopes TDS 520A
  * Tektronix Digitizing Oscilloscopes TDS 520C
  * Tektronix Digitizing Oscilloscopes TDS 540
  * Tektronix Digitizing Oscilloscopes TDS 744A
  * Tektronix Digitizing Oscilloscopes TDS 754A
  * LeCroy Digitizing Oscilloscope 9400

 Pulse generators:

  * Sony/Tektronix Data Generator DG2020
  * Tektronix Stimulus System HFS9003
  * Bruker EP385 Pulse Programmer
  * Interface Technology RS690 Digital Word Generator

 Lock-in amplifiers:

  * Stanford Research Lock-In Amplifier SR510
  * Stanford Research Lock-In Amplifier SR530
  * Stanford Research Lock-In Amplifier SR810
  * Stanford Research Lock-In Amplifier SR830
  * Bruker Signal Channel ER023M

 Magnet power supplies:

  * Bruker Field controller ER032M
  * Keithley 228A (used as superconducting magnet power supply)
  * Oxford Magnet Sweep Power Supply IPS20-4
  * AEG Magnet Power Supply (home-build computer control, S-, X-Band)

 Field meters

  * Bruker Hall Effect Field Controller BH 15
  * Bruker NMR Gaussmeter ER035M (F0, F1 probe, serial port and GPIB version)
  * Metrolab NMR Teslameter PT2025

 Microwave and RF synthesizers:

  * Hewlett-Packard Synthesizer HP8647A
  * Hewlett-Packard Synthesizer HP8648B
  * Hewlett-Packard Synthesizer HP8672A

 Freuqency counters:

  * Hewlett-Packard Frequency Counter HP5340A

 Temperature controllers:

  * LakeShore 330 Temperature Controller

 Digital voltmeters:

  * Kontron 4060 Voltmeter

 Box-car integrators:

  * EG&G PARC Box-Car Integrator 4402 (download of measured data only)

 DAC cards:

  * Meilhaus Electronic GmbH ME-6000 and ME-6100

 Event counter cards:

  * National Instruments NI6601

fsc2 works with three different GPIB driver/library combinations, the
Linux Lab Project driver (http://www.llp.fu-berlin.de), the National
Instruments driver (http://www.natinst.com) and a driver for NI PCII
and AT-GPIB/TNT (ISA) cards I wrote and which can be downloaded from
the same URL as fsc2, see above.


Support
-------

While I am prepared to help for free as far as my time allows, you also
can hire me for e.g. writing drivers for not currently supported devices,
creating scripts for experiments, installation support, instructing users
etc. Please send me an eail to discuss conditions.


Limitations
-----------

Due to my professional background fsc2 has been written with the different
types of EPR (Electron Paramagnetic Resonance) experiments in mind. On the
other hand, fsc2's basic concepts should make it easy to use it also for a
wide range of other types of spectrometers.

                                     Regards, Jens Thoms Toerring

                                    Jens.Toerring@physik.fu-berlin.de
