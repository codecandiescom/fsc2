#! /usr/bin/perl -w
#
# $Id$
#
# Script checks if for each malloc(), calloc(), strdup() or realloc() there's
# also a free(). To use it define MDEBUG when compiling fsc2, run fsc2 with
# stderr redirected to a file and then feed the resulting file to this script.

use strict;

my ( $h, %h1, %h2, @f, $key );

while ( <> ) {

	@f = split /\s+/;

	$h = $f[ 0 ] eq "(0)" ? \%h1 : \%h2;

	$$h{ $f[ 2 ] } = "$1 $f[ 2 ] at line $."
		if $f[ 1 ] =~ /^((malloc)|(calloc)|(strdup)):$/;

	if ( $f[ 1 ] eq "realloc:" ) {
		if ( $f[ 2 ] eq "(nil)" ) {
			$$h{ $f[ 4 ] } = "$f[ 0 ]: realloc from (nil) $f[ 4 ]";
		} else {
			if ( not defined $$h{ $f[ 2 ] } ) {
				print "$f[ 0 ]: realloc error for $f[ 2 ] at $.\n";
			} else {
				delete $$h{ $f[ 2 ] };
			}
		}
		$$h{ $f[ 4 ] } = "realloc $f[ 4 ]";
	}

	if ( $f[ 1 ] eq "free:" ) {
		if ( not defined $$h{ $f[ 2 ] } ) {
			print "$f[ 0 ]: free error for $f[ 2 ] at line $.\n";
		} else {
			delete $$h{ $f[ 2 ] };
		}
	}
}

if ( ( keys %h1 ) ) {
	print "Remaing memory from parent:\n";
	print "$h1{ $_ }\n" for ( keys %h1 );
}

if ( ( keys %h1 ) ) {
	print "Remaing memory from child:\n";
	print "$h2{ $_ }\n" for ( keys %h2 );
}
