/* -*-C-*-
  $Id$

  This file contains configuration information for controlling the
  Bruker EP 385 pulse programer as used in the Berlin pulsed X-band
  spectrometer. This file will be included as a header file, so the
  syntax must be valid C and changes will only become visible after
  re-compilation of the module.
*/


/* Define the name that's going to be used for the device. It must be
   identical to the name used in the GPIB configuration file (usually
   /etc/gpib.conf). */

#define DEVICE_NAME     "EP385"


/* Define the generic type of the device */

#define DEVICE_TYPE     "pulser"


/* Define the default minimum time distance (in seconds) between the end
   of a pulse shaper pulse and the start of the defense pulse when either
   TWT or TWT_GATE pulses are in use. It only applies if a defense
   pulse starts later than a pulse shaper pulse. The value is only
   that large for being 100% sure the detector won't get fried, in most
   realistic cases it will have to be reduced by calling the function
   pulser_shape_to_defense_mininum_distance(). */

#define SHAPE_2_DEFENSE_DEFAULT_MIN_DISTANCE  1.0e6        /* 1 us */


/* Define the default minimum time distance (in seconds) between the end
   of a defense pulse and the start of a pulse shaper pulse when either
   TWT or TWT_GATE pulses are used. This value only applies if a pulse
   shaper pulse starts later than the defense pulse. It is rather large
   to insure that the detector can't get hit by (amplified) microwave
   pulses and will usually have to be reduced to a more realistic value
   by a call of the function defence_to_shape_minimum_distance(). */

#define DEFENSE_2_SHAPE_DEFAULT_MIN_DISTANCE  1.0e-5       /* 1 us */


/* If you should ever get really annoyed about getting asked each time you
   start an experiment to confirm that you know what you where doing when
   you set a different PULSE_SHAPE to DEFENSE minimum distance (or the other
   way round) than the above given default (and unreasonably long) values
   comment out the next define (but don't blame me if you inadvertently
   destroy the detector by opening the defense switch while the microwave
   level was still too high, *you* asked for it...) */

#define ASK_FOR_SHAPE_DEFENSE_DISTANCE_CONFORMATION


/* The following two values are for automatically created shape pulses.
   When such shape pulses are used the pulses they are associated with
   automatically get a bit broadened. The first value defines how much
   earlier the pulse should start, the second how much longer the pulses
   should still be on after the shape pulses ended. Both values are
   default values and can be overridden by setting other values in the
   call of the function pulser_automatic_shape_pulses( ). */

#define AUTO_SHAPE_LEFT_PADDING   2.4e-8            /* 24 ns */
#define AUTO_SHAPE_RIGHT_PADDING  2.4e-8            /* 24 ns */


/* The following two values are for automatically created TWT pulses,
   i.e. pulses to switch on the TWT. Such TWT (gate) pulses should
   usually start quite some time before the pulse to be amplified
   starts and possibly should extend a bit over the end of the
   (microwave) pulse. The first of the values is the time an TWT
   pulse starts before the associated (microwave) pulse and the
   second value is the time the TWT pulse should still be on after
   the (microwave) pulse ended. Both values are default values and
   can be overridden by passing different values in the call of the
   function pulser_automatic_twt_pulses(). */

#define AUTO_TWT_LEFT_PADDING   4.0e-7              /* 400 ns */
#define AUTO_TWT_RIGHT_PADDING  2.4e-8              /* 24 ns */


/* This value defines the minimum distance between two TWT pulses - the
   TWT amplifier may not work correctly if the distance gets smaller */

#define MINIMUM_TWT_PULSE_DISTANCE 2.0e-6           /* 2 us */


/* The next value defines the maximum duty cycle of the TWT - if the sum
   of the lengths of the TWT (gate) pulses, devided by the repetition time,
   is larger than this value a warning message is printed. */

#define MAX_TWT_DUTY_CYCLE      0.01                /* 1% */
