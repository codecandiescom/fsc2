DEVICES:

VARIABLES:

BID1, BID2, BID3, BID4, BID5, BID6, BID7, SID1, SID2, I1, I2, I3, I4, I5;
NX = 32;
NNX;
FILE1, FILE2;
I = 0;

PREPARATIONS:

init_1d( 4, 32, "Blödsinn [nT]", "Schwachsinn [V]" );

EXPERIMENT:

layout( "VERTICAL" );
BID1 = button_create( "NORMAL_BUTTON", "Clear curve",
					  "Removes the currently\ndisplayed curve" );
BID2 = button_create( "PUSH_BUTTON", "RF On / Off" );
BID3 = button_create( "RADIO_BUTTON", "Bla3", "Help3" );
button_state( BID3, 1 );
BID4 = button_create( "RADIO_BUTTON", BID3, "Bla4", "Help4" );
SID1 = slider_create( "NORMAL_SLIDER", 0, 1, 0.2, "Blub1", "Hilfe1" );
BID5 = button_create( "RADIO_BUTTON", "Sweep RF up" );
BID6 = button_create( "RADIO_BUTTON", BID5, "Stop RF sweep" );
button_state( BID6, 1 );
BID7 = button_create( "RADIO_BUTTON", BID5, "Sweep RF down" );
SID2 = slider_create( "VALUE_SLIDER", -100.0, -3.0, "Attenuation",
					  "Adjusts RF attenuation" );
I1   = input_create( "INT_INPUT", 17, "Na, was wohl", "Weiss auch nicht..." );
I2   = input_create( "FLOAT_INPUT", -13, "Noch eins", "Foobar", "%15.2f" );
I3   = output_create( "INT_OUTPUT", 17, "", "Weiss auch nicht..." );
I4   = output_create( "FLOAT_OUTPUT", -13, "Noch eins", "", "%.5f" );
I5   = input_create( "INT_INPUT", NX, "Points in x direction" );

FILE1 = get_file( "", "*.dat", "", "", "dat" );
FILE2 = clone_file( FILE1, "dat", "dxx" );

FOREVER {

	IF ( button_state( BID1 ) ) {
		clear_curve( );
		I = 0;
	}

	I += 1;

	IF input_value( I1 ) > 100 {
		input_value( I3, I );
	}

	IF input_value( I2 ) > 100.0 {
		input_value( I4, 0.1 * I^2 );
	}

	display( I, slider_value( SID2 ) * slider_value( SID1 ) );
	wait( 500 ms );

	NNX = input_value( I5 );
	IF NNX != NX {
		rescale( NNX );
		NX = NNX;
	}
}

ON_STOP:

slider_delete( SID1 );
input_delete( I1 );

wait( 6 );
