DEVICES:

hp8647a;
sr810;


VARIABLES:

start_freq  =  8 MHz;
end_freq    = 22 MHz;
step_freq   = 25 kHz;          

attenuation = -5 db;

mod_freq    = 19 kHz;
mod_ampl    = 80 kHz;

N_runs      = 20;


/***********************************************************/
/* The following variables normally shouldn't be changed ! */
/***********************************************************/

I = 0;
J;
K = 1;

N_points = ceil( ( end_freq - start_freq ) / step_freq ) + 1;
data[ N_points ];
mean[ N_points ];
tc;
File_1, File_2;


PREPARATIONS:

synthesizer_use_table( );
synthesizer_attenuation( attenuation );
synthesizer_att_ref_freq( 14 MHz );
synthesizer_frequency( start_freq );
synthesizer_modulation( "FM", "EXT DC", mod_ampl );

init_1d( 2, N_points, start_freq * 1e-6, step_freq * 1e-6,
		 "Frequency / MHz", "Signal / V" ); 


EXPERIMENT:

File_1 = get_file( "File for storing all runs:" );
File_2 = get_file( "File for storing final result:" );

lockin_ref_freq( mod_freq );
lockin_ref_level( 1 V );
tc = lockin_time_constant( );

synthesizer_state( 1 );

FOR I = 1 : N_runs
{
	print( "Starting #. run of #\n", I, N_runs );

    FOR J = 1 : N_points 
	{
        data[ J ] = lockin_get_data( );
        display( J, data[ J ], 1, J, ( mean[ J ] + data[ J ] ) / I, 2 );
	    synthesizer_frequency( start_freq + J * step_freq );
        wait( tc );
    }

	save( File_1, data );
	mean += data;
	K = I;
    synthesizer_frequency( start_freq );
}


ON_STOP:

synthesizer_state( 0 );

IF I > 0
{
	save_program( File_2, "% " );
	fsave( File_2, "%\n% Lock-in sens. = # V, time const. = # s, phase = #\n"
		   "% Mod. freq. = # kHz, mod. ampl. = # kHz\n%\n",
		   lockin_sensitivity( ), tc, lockin_phase( ),
		   mod_freq * 1e-3, mod_ampl * 1e-3 );
	save_comment( File_2, "% ", "Sample: \nTemperature = \nField = \n",
				  "Please enter additional comments:" );
	fsave( File_2, "%\n" );
	save( File_2, mean / K );
}
