DEVICES:

dg2020_b;
tds520a;


VARIABLES:

timebase  =   5 ns;
delta_t   =  10 ns;
dead_time = 600 ns;
t0        = 250 ns;
pi_len    =  30 ns;
Num_avg   =  10;

Repeats   = 128;

I;
W1, W2;
x_data[ 2 ], y_data[ 2 ];


ASSIGNMENTS:

TIME_BASE:      timebase;
TRIGGER_MODE:   INTERNAL, REP_FREQ = 200 Hz;


MICROWAVE:      POD =  1, 2, 3, 4, 5, CH = 1, 2, 3, 4, 5,
                V_HIGH = 5 V, V_LOW = 0 V,
                INVERTED;

PULSE_SHAPE:    POD = 6, CH = 6,
                V_HIGH = 5 V, V_LOW = 0 V,
                INVERTED;

TWT_GATE:       POD = 11, CH = 11,
                V_HIGH = 5 V, V_LOW = 0 V;

DEFENSE:        POD = 7, CH = 7
                V_HIGH = 5 V, V_LOW = 0 V,
                INVERTED;

DETECTION:      POD = 0, CH = 0,
                V_HIGH = 5 V, V_LOW = 0 V;   

PHASE_SETUP_1:  MW,
                 X: POD = 1,
                +Y: POD = 2,
                -X: POD = 3,
                -Y: POD = 4,
                CW: POD = 5;


PREPARATIONS:


P30:  FUNCTION     = PULSE_SHAPE,
      START        = dead_time,
      LEN          = pi_len / 2;

P31:  FUNCTION     = PULSE_SHAPE,
      START        = P30.START + P30.LENGTH + t0,
      DELTA_START  = delta_t,
      LEN          = 2 * P30.LENGTH ;

P0:   FUNCTION     = MICROWAVE,
      START        = P30.START - 10 ns,
      LENGTH       = P30.LENGTH + 30 ns;

P1:   FUNCTION     = P0.FUNC,
      START        = P31.START - 10 ns,
      DELTA_START  = P31.DELTA_START,
      LENGTH       = P31.LENGTH + 30 ns ns;

P4:   FUNCTION     = TWT_GATE,
      START        = 0 ns,
      LENGTH       = P31.START + P31.LENGTH - 290 ns,
      DELTA_LENGTH = delta_t;

P10:  FUNCTION     = DEFENSE,
      START        = P31.START + P31.LENGTH + 140 ns,
      DELTA_START  = 2 * delta_t,
      LENGTH       = 1 us;

P20:  FUNCTION     = DETECTION,
      START        = P31.START + P31.LENGTH + t0 - 200 ns,
      DELTA_START  = 2 * delta_t,
      LENGTH       = 10 ns;


init_1d( 2, Repeats, ( P31.START - ( P30.START + P30.LEN ) ) * 10^6,
	     delta_t * 10^6, "Pulse separation [ us ]", "Signal [ pVs ]" );

digitizer_num_averages( Num_avg );
digitizer_trigger_channel( AUX2 );

W1 = digitizer_define_window( 300ns, 10ns );
W2 = digitizer_define_window( 500ns, 10ns );


EXPERIMENT:

digitizer_lock_keyboard( 0 );
pulser_lock_keyboard( 0 );

FOR I = 1 : Repeats {

    pulser_update( );

    digitizer_start_acquisition( );
    x_data[ 1 ] = digitizer_get_area_fast( CH1, W1 );
    x_data[ 2 ] = digitizer_get_area_fast( CH1, W2 );
    y_data[ 1 ] = digitizer_get_area_fast( CH2, W1 );
    y_data[ 2 ] = digitizer_get_area_fast( CH2, W2 );

    display( I, 10^12 * ( x_data[ 1 ] - x_data[ 2 ] ), 1,
	         I, 10^12 * ( y_data[ 1 ] - y_data[ 2 ] ), 2 );

    fsave( "# # # #\n", x_data[ 1 ], x_data[ 2 ], y_data[ 1 ], y_data[ 2 ] );

    pulser_shift( );
    pulser_increment( );
}
