/* $Id$ */

=== START_FIELD float [ 0 : 120019 ] [ 80000 ] "Start field" "G"
=== END_FIELD float [ 0 : 120019 ] [ 80500 ] "End field" "G"
=== FIELD_STEP float [ 0.14288 :  ] [ 1 ] "Field step" "G"
=== TRACE_LEN menu [ "500", "1000", "2500", "5000", "10000", "25000", \
=== "50000", "100000" ] [ 2 ] "Trace length" "pts"
=== SIGNAL_FIELD float [ 0 : 120019 ] [ 80050 ] \
=== "Signal start field\n(for laser correction)" "G"
=== PRETRIGGER  float [ 0.0 : 100.0 ] [ 10.0 ] "Pre-trigger" "in %"
=== NUM_AVG     int [ 1 : 1000000 ] [ 10 ] "Number of averages"
=== ACQ_CH menu [ "CH1", "CH2" ] [ 1 ] "Acquisition channel"
=== AVG_CH menu [ "TRACE_A", "TRACE_B", "TRACE_C", "TRACE_D" ] [ 1 ] \
=== "Averaging channel"
DEVICES:

ips120_10;
itc503;
lecroy_wr;


VARIABLES:

start_field = START_FIELD G;             // Start field
end_field   = END_FIELD G;               // End field
field_step  = FIELD_STEP G;              // Field step size
field = start_field;                     // Current field value
Num_Traces  = ceil( abs( start_field - end_field ) / abs( field_step ) ) + 1;
                                         // Number of field points
no_signal_max_field = SIGNAL_FIELD G;    // Start of field region with signals
Num_No_Signal_Traces = floor( abs( start_field - no_signal_max_field )
					   / abs( field_step ) );
                                         // No. of traces without signal

Num_Avg = NUM_AVG;                       // Number of averages per trace

Trace_Len = TRACE_LEN;                   // Digitizer trace length
timebase;                                // Digitizer timebase
time_res;                                // Digitizer time resolution
sens;                                    // Digitizer sensitivity
pretrigger  = 0.01 * PRETRIGGER;         // Amount of pre-trigger (rel. to
			                             // digitizer trace length)
wait_time = 5 s;                         // Time to wait for magnet to settle
data[ Num_Traces, * ];                   // Data of single scan
mdata[ Num_Traces, * ];                  // Averaged data of all scans
mdata_g[ Num_Traces, * ];
new_mdata[ * ];                          // New (scan averaged) trace
new_mdata_g[ * ];                        // New (scan averaged and baseline
			                             // corrected) trace
background[ * ];                         // averaged laser background signal
Pretrigger_Points;                       // No. of points before trigger
ground[ Num_Traces ];                    // baseline offsets for each trace

start_temp;

K = 0;                                   // Counter for scans
I;                                       // Counter for traces
J;                                       // Misc counter
BG_Count = 0;                            // No. of averaged backgrounds
B1, B2, B3, B4;                          // Toolbox variables
File;                                    // File handle
Scans_Done = 0;                          // Number of finished scans


PREPARATIONS:

/* Initialize graphics */

init_2d( 3, 0, Num_Traces, 0, 1, start_field, field_step, "Time [µs]",
         "Field [G]", "Signal [mV]" );


EXPERIMENT:

/* Set up the digitizer - first set the length of the digitizers traces and
   then set up the lengths of a few arrays accordingly */

digitizer_memory_size( Trace_Len );
background = float_slice( Trace_Len );
mdata[ 1 ] = float_slice( Trace_Len );
mdata_g[ 1 ] = mdata[ 1 ];
FOR I = 2 : Num_Traces {
	mdata[ I ] = mdata[ 1 ];
	mdata_g[ I ] = mdata_g[ 1 ];
}

/* Now get the timebase and the corresponding time resolution */

timebase = digitizer_timebase( );
time_res = digitizer_time_per_point( );

/* Using the time resolution calculate and set the amount of pre-trigger
   (which has to be adjusted to 1/10 of the timebase) and determine the
   number of points before the trigger */

pretrigger = 0.1 * timebase * round( pretrigger * time_res
						             * Trace_Len * 10.0 / timebase );
digitizer_trigger_delay( pretrigger );
Pretrigger_Points = int( pretrigger / time_res );

/* Correct the x-axis for to the amount of pre-trigger and the timebase */

change_scale_2d( - pretrigger / 1 us, time_res / 1 us );

/* Figure out the digitizers sensitivity */

sens = digitizer_sensitivity( CH1 );

/* Set up trigger mode and averaging if the number of averages is larger
   than 1 */

digitizer_trigger_coupling( EXT, "DC" );
digitizer_trigger_channel( EXT );

IF Num_Avg > 1 {
	digitizer_averaging( AVG_CH, ACQ_CH, Num_Avg );
}

/* Create the toolbox with two output field, one for the current scan number
   and one for the current field as well as a push button for stopping the
   experiment after the end of a scan */

hide_toolbox( "ON" );
B1 = output_create( "INT_OUTPUT", "Current scan" );
B2 = output_create( "FLOAT_OUTPUT", "Current field [G]", "%.2f" );
B3 = output_create( \"FLOAT_OUTPUT\", \"Current temperature [K]\", \"%.1f\" );
B4 = button_create( "PUSH_BUTTON", "Stop after end of scan" );
hide_toolbox( "OFF" );

magnet_field( start_field );
IF wait_time > 1 us {
	wait( wait_time );
}

File = get_file( );

start_temp = temp_contr_temperature( );

/* Now we need two nested loops, the outer loop over the scans and the inner
   loop over the field positions */

FOREVER {

	K += 1;
	output_value( B1, K );	              // Update the scan count display

	FOR I = 1 : Num_Traces {

		output_value( B2, field );        // Update the field value display
		output_value( B3, temp_contr_temperature( ) );

		/* Start an acquisition and fetch the resulting curve, then
		   immediately go to the next field position */
		
		digitizer_start_acquisition( );
		IF Num_Avg > 1 {
			data[ I ] = digitizer_get_curve( AVG_CH );
		} ELSE {
			data[ I ] = digitizer_get_curve( ACQ_CH );
	    }

		field += field_step;
		magnet_field( field );

		/* Calculate the mean of the data points before the trigger for the
		   elimination of baseline drifts */

		IF Pretrigger_Points > 0 {
		    ground[ I ] = mean( data[ I ], 1, Pretrigger_Points );
		}

	    /* While we're still in the field region where no signal is to be
	       expected add up the trace for background correction, then draw
		   the curves. */

		new_mdata = add_to_average( mdata[ I ], data[ I ], K );
		mdata_g[ I ] = add_to_average( mdata_g[ I ],
									   data[ I ] - ground[ I ], K );

		IF I <= Num_No_Signal_Traces {
			BG_Count += 1;
			background = add_to_average( background, data[ I ] - ground[ I ],
										 BG_Count );

			display_2d( 1, I, new_mdata / 1 mV, 1,
		            	1, I, mdata_g[ I ] / 1 mV, 2 );

			FOR J = 1 : I {
				IF Pretrigger_Points > 0 {
				    new_mdata = mdata_g[ J ] - background;
				    display_2d( 1, J, new_mdata / 1 mV, 3 );
				} ELSE {
					new_mdata = mdata[ J ] - background;
				    display_2d( 1, J, new_mdata / 1 mV, 3 );
				}
			}
		}

	    /* When we're in the field region where signals are to be expected draw
    	   the raw data, the data corrected for baseline drifts and the data
		   with both baseline drift and background correction as well as the
		   fully corrected and integrated data */

		IF I > Num_No_Signal_Traces  {
			display_2d( 1, I, new_mdata / 1 mV, 1,
		    	        1, I, mdata_g[ I ] / 1 mV, 2,
		        	    1, I, ( mdata_g[ I ] - background ) / 1 mV, 3 );
		}
	}

	/* Now that we're done with the scan recalculate the new mean of the
	   data and reset the field to the start position */

	mdata = add_to_average( mdata, data, K );

	Scans_Done += 1;                      // Update the number of scans done

	IF button_state( B4 ) {               // Stop on user request
		BREAK;
	}

	field = start_field;
	magnet_field( field );
	IF wait_time > 1 us {
		wait( wait_time );
	}
}

ON_STOP:

/* Write out the experimental parameters - make sure to get it right also in
   the case that a scan was aborted while under way */

fsave( File, "\# Date:                 # #\n"
             "\# Script:               tresr (J-band, Leiden)\n"
	         "\# Start field:          # G\n"
             "\# End field:            # G\n"
             "\# Field step size:      # G\n"
			 "\# No. of scans:         #\n"
             "\# No. of averages:      #\n"
			 "\# Sensitivity:          # mV\n"
			 "\# Timebase:             # us\n"
             "\# Time resolution:      # ns\n"
             "\# Trigger position:     # us\n"
			 "\# No. of traces:        #\n"
             "\# Trace length:         #\n"
			 "\# No signal traces:     #\n"
	         "\# Temperature at start: # K\n"
    	     "\# Temperature at end:   # K\n",
       date( ), time( ), start_field,
	   Scans_Done == 0 ? start_field + ( I - 1 ) * field_step : end_field,
	   field_step, Scans_Done == 0 ? 1 : Scans_Done, Num_Avg, sens / 1 mV,
	   timebase / 1 us, time_res / 1 ns, pretrigger / 1 us,
	   Scans_Done == 0 ? I : Num_Traces, Trace_Len, Num_No_Signal_Traces,
	   start_temp, temp_contr_temperature( ) );

/* Ask the user for a comment and write it into the file */

save_comment( File, "# " );

/* Finally write all (scan-averaged if applicable) raw data to the file */

IF Scans_Done == 0 {
    FOR J = 1 : I {
		fsave( File, "\# Field = # G\n",
		       start_field + ( J - 1 ) * field_step );
		save( File, data[ J ] );
	}
} ELSE {
    FOR J = 1 : Num_Traces {
		fsave( File, "\# Field = # G\n",
		       start_field + ( J - 1 ) * field_step );
		save( File, mdata[ J ] );
	}
}
