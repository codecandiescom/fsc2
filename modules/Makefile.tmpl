#  Copyright (C) 1999-2014 Jens Thoms Toerring
#
#  Template file for Makefiles to create the modules that need to be made
#  from more than one source file plus a header file. The '##'s get
#  replaced by the module name when the real Makefile is created from
#  this template file.
#
#  This file is part of fsc2.
#
#  Fsc2 is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3, or (at your option)
#  any later version.
#
#  Fsc2 is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.


# See the comments for the correspondig rules for simple modules in the
# main makefile on why these rules have this somewhat complicated form.
# If a version script exists we try to use it.


##.fsc2_so: $(##:.c=.o)
	@if [ -z "$(NO_VERSION_SCRIPTS)" -a -r ##.map ]; then             \
		map="-Wl,--version-script=##.map";                            \
	fi;                                                               \
	if [ -z "$($(patsubst %.fsc2_so,%_libs,$@))" ]; then              \
		echo "$(CC) $(LFLAGS) $^ -o $@ $$map";                        \
		$(CC) $(LFLAGS) $^ -o $@ $$map;                               \
		chmod 644 $@;                                                 \
	else                                                              \
		for l in "$($(patsubst %.fsc2_so,%_libs,$@))"; do             \
			if [ "$(notdir $$l)" = "$$l" ]; then                      \
				l=$${l%.so};                                          \
				libs="$$libs -l$${l#lib}";                            \
			else                                                      \
				libs="$$libs $$l";                                    \
			fi;                                                       \
		done;                                                         \
		echo "$(CC) $(LFLAGS) $^ $$libs -o $@ $$map";                 \
		$(CC) $$libs -shared -o $@.lib_test $$map 2>/dev/null;        \
		if [ -e $@.lib_test ]; then                                   \
			$(RM) $(RMFLAGS) $@.lib_test;                             \
			$(CC) $(LFLAGS) $^ $$libs -o $@;                          \
			chmod 644 $@;                                             \
		else                                                          \
			echo "warning: $@ not created, libraries not found.";     \
		fi;                                                           \
	fi

$(##:.c=.o): %.o: %.c ##.h $(cdir)/##.conf $(src_headers)
	@incl="$(foreach i,$(##_incl),-I$(i))";                           \
	echo "$(CC) $(CFLAGS) $$incl $(INCLUDES) -c $< -o $@";            \
	$(CC) $(CFLAGS) $$incl $(INCLUDES) -c $< -o $@


# The replacement of 'ECHO' by 'FLEX_ECHO' in the files created by flex is
# done because 'ECHO' (which is #defined in these files) is already defined
# in termios.h (which must be included for serial port support). The second
# replacement avoids a warning (at least for newer versions of flex) about
# a comparison betwen a signed and an unsigned int.

%_lexer.c: %_lexer.l %.h $(src_header)
	$(FLEX) $(FLEXFLAGS)$(patsubst %_lexer.l,%_,$<) -o$@ $<
	sed -e 's/\bECHO\b/FLEX_ECHO/g' \
		-e 's/for ( n = 0; n < max_size && \\$$/for ( n = 0; ( size_t ) n < max_size \&\& \\/' $@ > $@.x
	mv $@.x $@
