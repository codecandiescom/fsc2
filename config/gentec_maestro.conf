/* -*-C-*-
  This file contains configuration information for the Gentec
  Maestro power/energy meter, controlled either via LAN or USB.
  This file will be included as a header file, so the syntax must
  be valid C and changes will only become active after re-compilation
  and re-installation of the module.
*/


/* Define the name that's going to be used for the device. */

#define DEVICE_NAME     "GENTEC_MAESTRO"


/* Define the generic type of the device */

#define DEVICE_TYPE     "powermeter"


/* This module can be be compiled to either control the device via
   USB/serial port or via Ethernet. Please define either 'USE_SERIAL'
   or 'USE_LAN' (but not both at once!), together with the required
   parameters. Note that control via USB is just a serial connection
   via a USB-to-serial adaptor, so the parameters for the "USB
   connection" look exactly like for a serial port connection. */

#define USE_SERIAL

/* Define the device file of the serial or USB connection */

#define DEVICE_FILE  "/dev/serial/by-id/usb-Gentec-eo_Maestro_A7WLGZEY-if00-port0"


#if 0

#define USE_LAN


/* Define the network address of the device (as a string), either in
 * quad-dotted form or as a name that can be resolved via a DNS request */

#define NETWORK_ADDRESS  "192.168.99.45"


/* Define the port the device is listening on */

#define PORT 5000

#endif


/* Set the maximum timeout when trying to open the connection to the
   device, reading from it and write to it (in microseconds, if set to
   0 no timeout is used). */

#define OPEN_TIMEOUT      500000    /* 500 ms, only used for LAN */
#define READ_TIMEOUT      500000    /* 500 ms */
#define WRITE_TIMEOUT     100000    /* 100 ms */


/*
 * Local variables:
 * tab-width: 4
 * indent-tabs-mode: nil
 * End:
 */
